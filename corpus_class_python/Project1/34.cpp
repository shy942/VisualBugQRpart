dear imgui renderer backend modern open shaders programmatic pipeline desktop embedded web web platform backend glfw sdl win custom implemented features renderer user texture binding luint open texture identifier void texture read faq texture renderer large meshes support vertices bit indices desktop open web define imgui impl opengl define imgui impl opengl web open automatically android emscripten targets targets define visible imgui impl opengl cpp compilation unit unsure define globally imconfig unmodified imgui impl files project examples folder examples prefer including entire imgui repository project copy submodule build backends learn dear gui faq started documentation local docs folder introduction links imgui cpp changelog minor older stripped git history details open update based imgui impl opengl loader load lib variants fixing regression distros missing symlink open update based imgui impl opengl loader load lib lib accommodating net bsd systems lib open rename symbols internal loader lto compilation copy open fixed erroneous integerv context profile mask contexts open support bind sampler backup restore open restore polygon mode separately supported context open properly restoring shader program bound case prior running rendering function open fixed loader crash version returns null open fixed restoration deleted open program calling program open reverted buffer data corruptions issues issues seemingly reproed intel drivers nowadays revert nullptr null switch open ability define imgui impl opengl debug open reworking buffer orphaning intel gpu problems open fixed corruption open preserving element array buffer binding vertex attribute open buffer orphaning buffer data leaks multi viewports intel drivers open fixed shader version normal precision floats avoid wobbly rendering resolutions open embed minimal loader imgui impl opengl loader removing requirement support party loader reorganized backend pull data single structure facilitate usage multiple contexts xxxx access changed xxxx open oes vertex array extension emscripten backup restore current open destroy individual vertex fragment shader objects linked main shader open access clip origin arb clip control extension detected open version open replaced direct access draw cmd texture draw cmd tex requirement open read clip origin open greater open change blending equation preserve alpha output buffer open backup setup restore stencil test open backup setup restore primitive restart open string version integerv major version returns desktop open avoid compiling calling bind sampler pre context defines set loader open support glad open loader open default glsl version osx open fixed handling clip control upper left inverting projection matrix open fixed context version check mistakenly testing enable gui backend flags renderer vtx offset open support glbinding open loader open support glbinding open loader open combination define runtime version decide draw elements base vertex building pre loaders open detect default loader include compiler facility open tweak initialization code application calling gui impl open create fonts texture frame open desktop support large mesh vertices enable gui backend flags renderer vtx offset flag open support special draw callback reset render callback reset render open calling bind buffer render loop open comments gui impl open init detect uninitialized function loaders early open support web open osx supporting open read clip origin defined headers loader open projecting clipping rectangles correctly draw data framebuffer scale multi viewports retina display open glsl shaders version misc setting backend renderer displayed window open support clip control upper left clip origin open support open loaders glew glad comments indicative loader open default open android glsl version default version open support glsl core fixes emscripten compilation open support glsl versions based glsl version string error output shaders fail compile link misc extracted imgui impl opengl cpp combined glfw sdl open examples open draw data display pos draw data display size setup projection matrix clipping rectangle open removed unnecessary backup restore element array buffer binding vao open making bind sampler optional context fail function nullptr pointer open const char glsl version parameter gui impl open init user override glsl version version open create vao render function setup easily multiple shared context misc obsoleted render draw lists callback exposed gui impl sdl render draw data file open changed glsl shader version open save restore current bound sampler save restore current polygon mode open fixed save restore current blend func open fixed save restore current active texture open fixed save restore current scissor rectangle open explicitly setting unpack row length reduce issues sdl open glsl glsl version version string version version version version version version core version core version core version core version core version web version web defined msc ver defined crt secure warnings define crt secure warnings endif include imgui ifndef imgui disable include imgui impl opengl include stdio include stdint intptr defined apple include target conditionals endif clang gcc warnings weverything defined clang pragma clang diagnostic push pragma clang diagnostic wold style cast warning style cast pragma clang diagnostic wsign conversion warning implicit conversion signedness pragma clang diagnostic wunused macros warning macro pragma clang diagnostic wnonportable include path pragma clang diagnostic wcast function type warning cast incompatible function types loader endif defined gnuc pragma gcc diagnostic push pragma gcc diagnostic wpragmas warning unknown option pragma gcc diagnostic kind pragma gcc diagnostic wunknown warning option warning unknown warning group xxx pragma gcc diagnostic wcast function type warning cast incompatible function types loader endif includes defined imgui impl opengl defined apple target ios target include open gles include gles endif defined emscripten ifndef glext prototypes define glext prototypes endif include gles ext endif elif defined imgui impl opengl defined apple target ios target include open gles include gles endif elif defined imgui impl opengl loader custom modern desktop open standard portable header file load open function pointers helper libraries purpose minimal custom loader based rest app engine loader choice glew glad glbinding glext load gen happen developing feature backend imgui impl opengl cpp regenerate imgui impl opengl loader add symbols temporarily unstripped version backend accompanied regenerated stripped loader version define imgl impl include imgui impl opengl loader endif vertex arrays supported web emscripten extension ifndef imgui impl opengl define imgui impl opengl vertex array elif defined emscripten define imgui impl opengl vertex array define bind vertex array bind vertex array oes define gen vertex arrays gen vertex arrays oes define delete vertex arrays delete vertex arrays oes define vertex array binding vertex array binding oes endif desktop extension polygon mode web defined imgui impl opengl defined imgui impl opengl define imgui impl opengl extensions integerv num extensions define imgui impl opengl polygon mode polygon mode endif desktop bind buffer pixel unpack buffer target defined imgui impl opengl define imgui impl opengl bind buffer pixel unpack endif desktop primitive restart defined imgui impl opengl defined imgui impl opengl defined version define imgui impl opengl primitive restart endif desktop draw elements base vertex web defined imgui impl opengl defined imgui impl opengl defined version define imgui impl opengl vtx offset endif desktop bind sampler defined imgui impl opengl defined imgui impl opengl defined version define imgui impl opengl bind sampler endif debugging define imgui impl opengl debug ifdef imgui impl opengl debug include stdio define lenum err error err fprintf stderr error returned err error check define error check endif open data struct gui impl open data luint version extracted runtime major version minor version queries char glsl version string user detected based compile time settings bool profile bool profile bool profile compat lint profile mask luint font texture luint shader handle lint attrib location tex uniforms location lint attrib location proj mtx luint attrib location vtx pos vertex attributes location luint attrib location vtx luint attrib location vtx color unsigned int vbo handle elements handle lsizeiptr vertex buffer size lsizeiptr buffer size bool clip origin bool buffer data gui impl open data memset void sizeof backend data stored backend renderer user data support multiple dear gui contexts preferred docking branch multi viewports single dear gui context multiple windows multiple dear gui contexts static gui impl open data gui impl open backend data return gui current context gui impl open data gui backend renderer user data nullptr open vertex attribute ifndef imgui impl opengl vertex array struct gui impl open vtx attrib lint enabled size type normalized stride lvoid ptr void lint vertex attribiv vertex attrib array enabled enabled vertex attribiv vertex attrib array size size vertex attribiv vertex attrib array type type vertex attribiv vertex attrib array normalized normalized vertex attribiv vertex attrib array stride stride vertex attrib pointerv vertex attrib array pointer ptr void set lint vertex attrib pointer size type lboolean normalized stride ptr enabled enable vertex attrib array disable vertex attrib array endif functions bool gui impl open init const char glsl version gui gui assert backend renderer user data nullptr initialized renderer backend initialize loader defined imgui impl opengl defined imgui impl opengl defined imgui impl opengl loader custom imgl init fprintf stderr failed initialize open loader return false endif setup backend capabilities flags gui impl open data gui impl open data backend renderer user data void backend renderer imgui impl opengl query version defined imgui impl opengl gles version profile true desktop gles lint major lint minor integerv major version major integerv minor version minor major minor query version desktop string start major minor const char version const char string version sscanf version major minor version luint major minor defined context profile mask version integerv context profile mask profile mask profile compat profile mask context compatibility profile bit endif defined imgui impl opengl profile true endif buffer data false query vendor enable buffer data kludge ifdef win const char vendor const char string vendor strncmp vendor intel buffer data true endif endif ifdef imgui impl opengl debug printf version profile compat profile mask profile profile vendor renderer version profile compat profile mask profile profile const char string vendor const char string renderer debug endif ifdef imgui impl opengl vtx offset version backend flags gui backend flags renderer vtx offset honor draw cmd vtx offset field allowing large meshes endif store glsl version string refer case recreate shaders note glsl version version leave nullptr unsure glsl version nullptr defined imgui impl opengl glsl version version elif defined imgui impl opengl glsl version version elif defined apple glsl version version glsl version version endif assert int strlen glsl version arraysize glsl version string strcpy glsl version string glsl version strcat glsl version string arbitrary result crash open function loader job lint current texture integerv texture binding current texture detect extensions support clip origin version ifdef imgui impl opengl extensions lint num extensions integerv num extensions num extensions lint num extensions const char extension const char stringi extensions extension nullptr strcmp extension arb clip control clip origin true endif return true void gui impl open shutdown gui impl open data gui impl open backend data assert nullptr renderer backend shutdown shutdown gui gui gui impl open destroy device objects backend renderer nullptr backend renderer user data nullptr backend flags gui backend flags renderer vtx offset delete void gui impl open frame gui impl open data gui impl open backend data assert nullptr gui impl open init shader handle gui impl open create device objects static void gui impl open setup render draw data draw data int width int height luint vertex array object gui impl open data gui impl open backend data setup render alpha blending enabled face culling depth testing scissor enabled polygon enable blend blend equation func add blend func separate src alpha src alpha src alpha disable cull face disable depth test disable stencil test enable scissor test ifdef imgui impl opengl primitive restart version disable primitive restart endif ifdef imgui impl opengl polygon mode polygon mode endif support rarely clip control upper left defined clip origin bool clip origin left true clip origin lenum current clip origin integerv clip origin lint current clip origin current clip origin upper left clip origin left false endif setup viewport orthographic projection matrix visible imgui space lies draw data display pos left draw data display pos data data display size display pos single viewport apps viewport lsizei width lsizei height float draw data display pos float draw data display pos draw data display size float draw data display pos float draw data display pos draw data display size defined clip origin clip origin left float tmp tmp swap origin upper left endif const float ortho projection program shader handle uniform attrib location tex uniform matrix attrib location proj mtx false ortho projection ifdef imgui impl opengl bind sampler version profile bind sampler combined texture sampler applications set endif void vertex array object ifdef imgui impl opengl vertex array bind vertex array vertex array object endif bind vertex buffers setup attributes draw vert bind buffer array buffer vbo handle bind buffer element array buffer elements handle enable vertex attrib array attrib location vtx pos enable vertex attrib array attrib location vtx enable vertex attrib array attrib location vtx color vertex attrib pointer attrib location vtx pos float false sizeof draw vert lvoid offsetof draw vert pos vertex attrib pointer attrib location vtx float false sizeof draw vert lvoid offsetof draw vert vertex attrib pointer attrib location vtx color unsigned byte true sizeof draw vert lvoid offsetof draw vert col open render function note implementation overcomplicated saving setting restoring open explicitly order open engine void gui impl open render draw data draw data draw data avoid rendering minimized scale coordinates retina displays screen coordinates framebuffer coordinates int width int draw data display size draw data framebuffer scale int height int draw data display size draw data framebuffer scale width height return gui impl open data gui impl open backend data backup lenum active texture integerv active texture lint active texture active texture texture luint program integerv current program lint program luint texture integerv texture binding lint texture ifdef imgui impl opengl bind sampler luint sampler version profile integerv sampler binding lint sampler sampler endif luint array buffer integerv array buffer binding lint array buffer ifndef imgui impl opengl vertex array vao open open lint element array buffer integerv element array buffer binding element array buffer gui impl open vtx attrib vtx attrib pos vtx attrib pos attrib location vtx pos gui impl open vtx attrib vtx attrib vtx attrib attrib location vtx gui impl open vtx attrib vtx attrib color vtx attrib color attrib location vtx color endif ifdef imgui impl opengl vertex array luint vertex array object integerv vertex array binding lint vertex array object endif ifdef imgui impl opengl polygon mode lint polygon mode integerv polygon mode polygon mode endif lint viewport integerv viewport viewport lint scissor box integerv scissor box scissor box lenum blend src rgb integerv blend src rgb lint blend src rgb lenum blend dst rgb integerv blend dst rgb lint blend dst rgb lenum blend src alpha integerv blend src alpha lint blend src alpha lenum blend dst alpha integerv blend dst alpha lint blend dst alpha lenum blend equation rgb integerv blend equation rgb lint blend equation rgb lenum blend equation alpha integerv blend equation alpha lint blend equation alpha lboolean enable blend enabled blend lboolean enable cull face enabled cull face lboolean enable depth test enabled depth test lboolean enable stencil test enabled stencil test lboolean enable scissor test enabled scissor test ifdef imgui impl opengl primitive restart lboolean enable primitive restart version enabled primitive restart false endif setup desired recreate vao time easily multiple contexts rendered vao shared contexts renderer work vao bound vertex attrib calls overwrite default bound luint vertex array object ifdef imgui impl opengl vertex array gen vertex arrays vertex array object endif gui impl open setup render draw data width height vertex array object project scissor clipping rectangles framebuffer space vec clip draw data display pos multi viewports vec clip scale draw data framebuffer scale retina display render command lists int draw data cmd lists count const draw list cmd list draw data cmd lists upload vertex buffers open drivers nowadays attempted switch buffer data orphaning buffer data reports leaks intel gpu multi viewports windows hearing display corruptions issues started disabling intel gpu issues reported intel exclusively buffer data buffer data false code keeping code path case people finding issues test buffer data path report corruption issues const lsizeiptr vtx buffer size lsizeiptr cmd list vtx buffer size int sizeof draw vert const lsizeiptr idx buffer size lsizeiptr cmd list idx buffer size int sizeof draw idx buffer data vertex buffer size vtx buffer size vertex buffer size vtx buffer size buffer data array buffer vertex buffer size nullptr stream draw buffer size idx buffer size buffer size idx buffer size buffer data element array buffer buffer size nullptr stream draw buffer data array buffer vtx buffer size const lvoid cmd list vtx buffer data buffer data element array buffer idx buffer size const lvoid cmd list idx buffer data buffer data array buffer vtx buffer size const lvoid cmd list vtx buffer data stream draw buffer data element array buffer idx buffer size const lvoid cmd list idx buffer data stream draw int cmd cmd cmd list cmd buffer size cmd const draw cmd pcmd cmd list cmd buffer cmd pcmd user callback nullptr user callback registered draw list add callback draw callback reset render special callback user request renderer reset render pcmd user callback draw callback reset render gui impl open setup render draw data width height vertex array object pcmd user callback cmd list pcmd project scissor clipping rectangles framebuffer space vec clip min pcmd clip rect clip clip scale pcmd clip rect clip clip scale vec clip max pcmd clip rect clip clip scale pcmd clip rect clip clip scale clip max clip min clip max clip min continue apply scissor clipping rectangle inverted open scissor int clip min int float height clip max int clip max clip min int clip max clip min bind texture draw bind texture texture luint intptr pcmd tex ifdef imgui impl opengl vtx offset version draw elements base vertex triangles lsizei pcmd elem count sizeof draw idx unsigned short unsigned int void intptr pcmd idx offset sizeof draw idx lint pcmd vtx offset endif draw elements triangles lsizei pcmd elem count sizeof draw idx unsigned short unsigned int void intptr pcmd idx offset sizeof draw idx destroy temporary vao ifdef imgui impl opengl vertex array delete vertex arrays vertex array object endif restore modified program check required program pending deletion time binding backup deleted open error program program program program program bind texture texture texture ifdef imgui impl opengl bind sampler version profile bind sampler sampler endif active texture active texture ifdef imgui impl opengl vertex array bind vertex array vertex array object endif bind buffer array buffer array buffer ifndef imgui impl opengl vertex array bind buffer element array buffer element array buffer vtx attrib pos set attrib location vtx pos vtx attrib set attrib location vtx vtx attrib color set attrib location vtx color endif blend equation separate blend equation rgb blend equation alpha blend func separate blend src rgb blend dst rgb blend src alpha blend dst alpha enable blend enable blend disable blend enable cull face enable cull face disable cull face enable depth test enable depth test disable depth test enable stencil test enable stencil test disable stencil test enable scissor test enable scissor test disable scissor test ifdef imgui impl opengl primitive restart version enable primitive restart enable primitive restart disable primitive restart endif ifdef imgui impl opengl polygon mode desktop open open separate polygon draw modes facing facing faces polygons version profile compat polygon mode lenum polygon mode polygon mode lenum polygon mode polygon mode lenum polygon mode endif imgui impl opengl polygon mode viewport viewport viewport lsizei viewport lsizei viewport scissor scissor box scissor box lsizei scissor box lsizei scissor box void compilation paths bool gui impl open create fonts texture gui gui gui impl open data gui impl open backend data build texture atlas unsigned char pixels int width height fonts tex data rgba pixels width height load rgba bit memory wasted default font small compatible user existing shaders texture represent higher level concept texture calling tex data alpha save gpu memory upload texture graphics bilinear sampling required default set fonts flags font atlas flags baked lines style anti aliased lines tex false point nearest sampling lint texture integerv texture binding texture gen textures font texture bind texture texture font texture tex parameteri texture texture min filter linear tex parameteri texture texture mag filter linear ifdef unpack row length web pixel storei unpack row length endif tex image texture rgba width height rgba unsigned byte pixels store identifier fonts set tex texture intptr font texture restore bind texture texture texture return true void gui impl open destroy fonts texture gui gui gui impl open data gui impl open backend data font texture delete textures font texture fonts set tex font texture error report github context version glsl version glsl version table file static bool check shader luint handle const char desc gui impl open data gui impl open backend data lint status log length shaderiv handle compile status status shaderiv handle info log length log length lboolean status false fprintf stderr error gui impl open create device objects failed compile glsl desc glsl version string log length vector char buf buf resize int log length shader info log handle log length nullptr lchar buf fprintf stderr buf return lboolean status true error report git hub context version glsl version static bool check program luint handle const char desc gui impl open data gui impl open backend data lint status log length programiv handle link status status programiv handle info log length log length lboolean status false fprintf stderr error gui impl open create device objects failed link glsl desc glsl version string log length vector char buf buf resize int log length program info log handle log length nullptr lchar buf fprintf stderr buf return lboolean status true bool gui impl open create device objects gui impl open data gui impl open backend data backup lint texture array buffer integerv texture binding texture integerv array buffer binding array buffer ifdef imgui impl opengl bind buffer pixel unpack lint pixel unpack buffer version integerv pixel unpack buffer binding pixel unpack buffer bind buffer pixel unpack buffer endif ifdef imgui impl opengl vertex array lint vertex array integerv vertex array binding vertex array endif parse glsl version string int glsl version sscanf glsl version string version glsl version const lchar vertex shader glsl uniform mat proj mtx attribute vec position attribute vec attribute vec color varying vec frag varying vec frag color void main frag frag color color position proj mtx vec position const lchar vertex shader glsl uniform mat proj mtx vec position vec vec color vec frag vec frag color void main frag frag color color position proj mtx vec position const lchar vertex shader glsl precision highp float layout location vec position layout location vec layout location vec color uniform mat proj mtx vec frag vec frag color void main frag frag color color position proj mtx vec position const lchar vertex shader glsl core layout location vec position layout location vec layout location vec color uniform mat proj mtx vec frag vec frag color void main frag frag color color position proj mtx vec position const lchar fragment shader glsl ifdef precision mediump float endif uniform sampler texture varying vec frag varying vec frag color void main frag color frag color texture texture frag const lchar fragment shader glsl uniform sampler texture vec frag vec frag color vec color void main color frag color texture texture frag const lchar fragment shader glsl precision mediump float uniform sampler texture vec frag vec frag color layout location vec color void main color frag color texture texture frag const lchar fragment shader glsl core vec frag vec frag color uniform sampler texture layout location vec color void main color frag color texture texture frag select shaders matching glsl versions const lchar vertex shader nullptr const lchar fragment shader nullptr glsl version vertex shader vertex shader glsl fragment shader fragment shader glsl glsl version vertex shader vertex shader glsl core fragment shader fragment shader glsl core glsl version vertex shader vertex shader glsl fragment shader fragment shader glsl vertex shader vertex shader glsl fragment shader fragment shader glsl create shaders const lchar vertex shader version glsl version string vertex shader luint vert handle create shader vertex shader shader source vert handle vertex shader version nullptr compile shader vert handle check shader vert handle vertex shader const lchar fragment shader version glsl version string fragment shader luint frag handle create shader fragment shader shader source frag handle fragment shader version nullptr compile shader frag handle check shader frag handle fragment shader link shader handle create program attach shader shader handle vert handle attach shader shader handle frag handle link program shader handle check program shader handle shader program detach shader shader handle vert handle detach shader shader handle frag handle delete shader vert handle delete shader frag handle attrib location tex uniform location shader handle texture attrib location proj mtx uniform location shader handle proj mtx attrib location vtx pos luint attrib location shader handle position attrib location vtx luint attrib location shader handle attrib location vtx color luint attrib location shader handle color create buffers gen buffers vbo handle gen buffers elements handle gui impl open create fonts texture restore modified bind texture texture texture bind buffer array buffer array buffer ifdef imgui impl opengl bind buffer pixel unpack version bind buffer pixel unpack buffer pixel unpack buffer endif ifdef imgui impl opengl vertex array bind vertex array vertex array endif return true void gui impl open destroy device objects gui impl open data gui impl open backend data vbo handle delete buffers vbo handle vbo handle elements handle delete buffers elements handle elements handle shader handle delete program shader handle shader handle gui impl open destroy fonts texture defined gnuc pragma gcc diagnostic pop endif defined clang pragma clang diagnostic pop endif endif ifndef imgui disable