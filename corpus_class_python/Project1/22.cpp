dear imgui renderer backend direct platform backend win implemented features renderer user texture binding gpu descriptor handle texture read faq texture renderer large meshes support vertices bit indices compile bit systems backend requires code compiled define texture texture carry bit default texture defined void build bit systems solution ide msbuild properties preprocessor definitions add texture win direct win direct vcxproj project file solution ide msbuild properties preprocessor definitions add imgui user config imgui config imgui config add define texture options solution ide msbuild edit imconfig add define texture prefer solution create config file solution command add texture exe command win direct build win bat file unmodified imgui impl files project examples folder examples prefer including entire imgui repository project copy submodule build backends learn dear gui faq started documentation local docs folder introduction links imgui cpp changelog minor older stripped git history details nullptr null switch reorganized backend pull data single structure facilitate usage multiple contexts xxxx access changed xxxx direct replaced direct access draw cmd texture draw cmd tex requirement direct change blending equation preserve alpha output buffer direct improve windows compatibility loading dll dynamically direct avoid rendering calls sized scissor rectangle generates validation layer warning direct clarified support building bit systems redefining texture direct breaking change extra descriptor heap parameter gui impl init function direct support large mesh vertices enable gui backend flags renderer vtx offset flag direct support special draw callback reset render callback reset render misc minor tidying misc pragma comment statement automatically link dcompiler lib compile misc setting backend renderer displayed window direct moved graphics command list parameter frame render draw data misc extracted imgui impl cpp combined win direct draw data display pos draw data display size setup projection matrix clipping rectangle ease support future multi viewport merged master win code synchronized examples include imgui ifndef imgui disable include imgui impl direct include include dxgi include dcompiler ifdef msc ver pragma comment lib dcompiler automatically link dcompiler lib compile endif direct data struct gui impl render buffers struct gui impl data device device root signature root signature pipeline pipeline dxgi format rtv format resource font texture resource cpu descriptor handle font srv cpu desc handle gpu descriptor handle font srv gpu desc handle descriptor heap srv desc heap uint num frames flight gui impl render buffers frame resources uint frame gui impl data memset void sizeof frame uint max backend data stored backend renderer user data support multiple dear gui contexts preferred docking branch multi viewports single dear gui context multiple windows multiple dear gui contexts static gui impl data gui impl backend data return gui current context gui impl data gui backend renderer user data nullptr buffers rendering frame struct gui impl render buffers resource buffer resource vertex buffer int buffer size int vertex buffer size struct vertex constant buffer float mvp functions static void gui impl setup render draw data draw data graphics command list ctx gui impl render buffers gui impl data gui impl backend data setup orthographic projection matrix constant buffer visible imgui space lies draw data display pos left draw data display pos data data display size vertex constant buffer vertex constant buffer float draw data display pos float draw data display pos draw data display size float draw data display pos float draw data display pos draw data display size float mvp memcpy vertex constant buffer mvp mvp sizeof mvp setup viewport viewport memset sizeof viewport width draw data display size height draw data display size min depth max depth left left ctx set viewports bind shader vertex buffers unsigned int stride sizeof draw vert unsigned int offset vertex buffer view vbv memset vbv sizeof vertex buffer view vbv buffer location vertex buffer gpu virtual address offset vbv size bytes vertex buffer size stride vbv stride bytes stride ctx set vertex buffers vbv buffer view ibv memset ibv sizeof buffer view ibv buffer location buffer gpu virtual address ibv size bytes buffer size sizeof draw idx ibv format sizeof draw idx dxgi format uint dxgi format uint ctx set buffer ibv ctx set primitive topology primitive topology trianglelist ctx set pipeline pipeline ctx set graphics root signature root signature ctx set graphics root bit constants vertex constant buffer setup blend factor const float blend factor ctx set blend factor blend factor template typename static inline void safe release res res res release res nullptr render function void gui impl render draw data draw data draw data graphics command list ctx avoid rendering minimized draw data display size draw data display size return fixme assuming called frame allocate proper allocator gui impl data gui impl backend data frame frame gui impl render buffers frame resources frame num frames flight create grow vertex buffers needed vertex buffer nullptr vertex buffer size draw data total vtx count safe release vertex buffer vertex buffer size draw data total vtx count heap properties props memset props sizeof heap properties props type heap type upload props cpu property cpu property unknown props memory pool preference memory pool unknown resource desc desc memset desc sizeof resource desc desc dimension resource dimension buffer desc width vertex buffer size sizeof draw vert desc height desc depth array size desc mip levels desc format dxgi format unknown desc sample desc count desc layout texture layout row major desc flags resource flag device create committed resource props heap flag desc resource generic read nullptr iid ppv args vertex buffer return buffer nullptr buffer size draw data total idx count safe release buffer buffer size draw data total idx count heap properties props memset props sizeof heap properties props type heap type upload props cpu property cpu property unknown props memory pool preference memory pool unknown resource desc desc memset desc sizeof resource desc desc dimension resource dimension buffer desc width buffer size sizeof draw idx desc height desc depth array size desc mip levels desc format dxgi format unknown desc sample desc count desc layout texture layout row major desc flags resource flag device create committed resource props heap flag desc resource generic read nullptr iid ppv args buffer return upload vertex data single contiguous gpu buffer void vtx resource idx resource range range memset range sizeof range vertex buffer map range vtx resource return buffer map range idx resource return draw vert vtx dst draw vert vtx resource draw idx idx dst draw idx idx resource int draw data cmd lists count const draw list cmd list draw data cmd lists memcpy vtx dst cmd list vtx buffer data cmd list vtx buffer size sizeof draw vert memcpy idx dst cmd list idx buffer data cmd list idx buffer size sizeof draw idx vtx dst cmd list vtx buffer size idx dst cmd list idx buffer size vertex buffer unmap range buffer unmap range setup desired gui impl setup render draw data ctx render command lists merged buffers single maintain offset int global vtx offset int global idx offset vec clip draw data display pos int draw data cmd lists count const draw list cmd list draw data cmd lists int cmd cmd cmd list cmd buffer size cmd const draw cmd pcmd cmd list cmd buffer cmd pcmd user callback nullptr user callback registered draw list add callback draw callback reset render special callback user request renderer reset render pcmd user callback draw callback reset render gui impl setup render draw data ctx pcmd user callback cmd list pcmd project scissor clipping rectangles framebuffer space vec clip min pcmd clip rect clip pcmd clip rect clip vec clip max pcmd clip rect clip pcmd clip rect clip clip max clip min clip max clip min continue apply scissor clipping rectangle bind texture draw const rect long clip min long clip min long clip max long clip max gpu descriptor handle texture handle texture handle ptr uint pcmd tex ctx set graphics root descriptor table texture handle ctx set scissor rects ctx draw indexed instanced pcmd elem count pcmd idx offset global idx offset pcmd vtx offset global vtx offset global idx offset cmd list idx buffer size global vtx offset cmd list vtx buffer size static void gui impl create fonts texture build texture atlas gui gui gui impl data gui impl backend data unsigned char pixels int width height fonts tex data rgba pixels width height upload texture graphics heap properties props memset props sizeof heap properties props type heap type default props cpu property cpu property unknown props memory pool preference memory pool unknown resource desc desc memory desc sizeof desc desc dimension resource dimension texture desc alignment desc width width desc height height desc depth array size desc mip levels desc format dxgi format unorm desc sample desc count desc sample desc quality desc layout texture layout unknown desc flags resource flag resource texture nullptr device create committed resource props heap flag desc resource copy dest nullptr iid ppv args texture uint upload pitch width texture data pitch alignment texture data pitch alignment uint upload size height upload pitch desc dimension resource dimension buffer desc alignment desc width upload size desc height desc depth array size desc mip levels desc format dxgi format unknown desc sample desc count desc sample desc quality desc layout texture layout row major desc flags resource flag props type heap type upload props cpu property cpu property unknown props memory pool preference memory pool unknown resource upload buffer nullptr hresult device create committed resource props heap flag desc resource generic read nullptr iid ppv args upload buffer assert succeeded void mapped nullptr range range upload size upload buffer map range mapped assert succeeded int height memcpy void uintptr mapped upload pitch pixels width width upload buffer unmap range texture copy location src location src location resource upload buffer src location type texture copy type footprint src location footprint footprint format dxgi format unorm src location footprint footprint width width src location footprint footprint height height src location footprint footprint depth src location footprint footprint row pitch upload pitch texture copy location dst location dst location resource texture dst location type texture copy type subresource dst location subresource resource barrier barrier barrier type resource barrier type transition barrier flags resource barrier flag barrier transition resource texture barrier transition subresource resource barrier subresources barrier transition resource copy dest barrier transition resource pixel shader resource fence fence nullptr device create fence fence flag iid ppv args fence assert succeeded handle event create event assert event nullptr command queue desc queue desc queue desc type command list type direct queue desc flags command queue flag queue desc node mask command queue cmd queue nullptr device create command queue queue desc iid ppv args cmd queue assert succeeded command allocator cmd alloc nullptr device create command allocator command list type direct iid ppv args cmd alloc assert succeeded graphics command list cmd list nullptr device create command list command list type direct cmd alloc nullptr iid ppv args cmd list assert succeeded cmd list copy texture region dst location src location nullptr cmd list resource barrier barrier cmd list close assert succeeded cmd queue execute command lists command list const cmd list cmd queue signal fence assert succeeded fence set event completion event wait single object event infinite cmd list release cmd alloc release cmd queue release close handle event fence release upload buffer release create texture view shader resource view desc srv desc memory srv desc sizeof srv desc srv desc format dxgi format unorm srv desc view dimension srv dimension texture srv desc texture mip levels desc mip levels srv desc texture detailed mip srv desc shader component mapping default shader component mapping device create shader resource view texture srv desc font srv cpu desc handle safe release font texture resource font texture resource texture store identifier read static assert triggers compile bit systems backend requires code compiled define texture texture carry bit default texture defined void solution ide msbuild properties preprocessor definitions add texture win direct win direct vcxproj project file solution ide msbuild properties preprocessor definitions add imgui user config imgui config imgui config add define texture options solution ide msbuild edit imconfig add define texture prefer solution create config file solution command add texture exe command win direct build win bat file static assert sizeof texture sizeof font srv gpu desc handle ptr pack descriptor handle tex bit supported fonts set tex texture font srv gpu desc handle ptr bool gui impl create device objects gui impl data gui impl backend data device return false pipeline gui impl invalidate device objects create root signature descriptor range desc range desc range range type descriptor range type srv desc range num descriptors desc range base shader register desc range register space desc range offset descriptors table start root parameter param param parameter type root parameter type bit constants param constants shader register param constants register space param constants num bit values param shader visibility shader visibility vertex param parameter type root parameter type descriptor table param descriptor table num descriptor ranges param descriptor table descriptor ranges desc range param shader visibility shader visibility pixel bilinear sampling required default set fonts flags font atlas flags baked lines style anti aliased lines tex false point nearest sampling static sampler desc static sampler static sampler filter filter min mag mip linear static sampler address texture address mode wrap static sampler address texture address mode wrap static sampler address texture address mode wrap static sampler mip lod bias static sampler max anisotropy static sampler comparison func comparison func static sampler border color static border color transparent black static sampler min lod static sampler max lod static sampler shader register static sampler register space static sampler shader visibility shader visibility pixel root signature desc desc desc num parameters countof param desc parameters param desc num static samplers desc static samplers static sampler desc flags root signature flag input assembler input layout root signature flag deny hull shader root access root signature flag deny domain shader root access root signature flag deny geometry shader root access load dll serialize root signature function address dynamically facilitate version dll loaded process preference static hinstance dll module handle dll dll nullptr attempt load dll local directories succeed current windows exists version dll windows directories details const char local paths dll dll dll current directory games microsoft sample int arraysize local paths dll load library local paths nullptr break failed windows dll nullptr dll load library dll dll nullptr return false pfn serialize root signature serialize root signature pfn serialize root signature proc address dll serialize root signature serialize root signature nullptr return false blob blob nullptr serialize root signature desc root signature version blob nullptr return false device create root signature blob buffer pointer blob buffer size iid ppv args root signature blob release compile dcompiler dcompiler lib introduce dependency version dcompiler dll dcompiler dll sample code remove dependency compile save compiled shader blobs file source code assign pso desc preferred solution code detect version dll grab pointer compile dll sources details graphics pipeline desc pso desc memset pso desc sizeof graphics pipeline desc pso desc node mask pso desc primitive topology type primitive topology type triangle pso desc root signature root signature pso desc sample mask uint max pso desc num render targets pso desc rtv formats rtv format pso desc sample desc count pso desc flags pipeline flag blob vertex shader blob blob pixel shader blob create vertex shader static const char vertex shader cbuffer vertex buffer register float projection matrix struct input float pos position float col color float texcoord struct input float pos position float col color float texcoord input main input input input output output pos mul projection matrix float input pos output col input col output input return output failed compile vertex shader strlen vertex shader nullptr nullptr nullptr main vertex shader blob nullptr return false pass blob error blob compile error showing const char error blob buffer pointer release blob pso desc vertex shader blob buffer pointer vertex shader blob buffer size create input layout static input element desc local layout position dxgi format float uint offsetof draw vert pos input classification vertex data texcoord dxgi format float uint offsetof draw vert input classification vertex data color dxgi format unorm uint offsetof draw vert col input classification vertex data pso desc input layout local layout create pixel shader static const char pixel shader struct input float pos position float col color float texcoord sampler sampler register texture texture register float main input input target float col input col texture sample sampler input return col failed compile pixel shader strlen pixel shader nullptr nullptr nullptr main pixel shader blob nullptr vertex shader blob release return false pass blob error blob compile error showing const char error blob buffer pointer release blob pso desc pixel shader blob buffer pointer pixel shader blob buffer size create blending setup blend desc desc pso desc blend desc alpha coverage enable false desc render target blend enable true desc render target src blend blend src alpha desc render target dest blend blend inv src alpha desc render target blend blend add desc render target src blend alpha blend desc render target dest blend alpha blend inv src alpha desc render target blend alpha blend add desc render target render target write mask color write enable create rasterizer rasterizer desc desc pso desc rasterizer desc mode mode solid desc cull mode cull mode desc counter clockwise false desc depth bias default depth bias desc depth bias clamp default depth bias clamp desc slope scaled depth bias default slope scaled depth bias desc depth clip enable true desc multisample enable false desc antialiased enable false desc forced sample count desc conservative raster conservative rasterization mode create depth stencil depth stencil desc desc pso desc depth stencil desc depth enable false desc depth write mask depth write mask desc depth func comparison func desc stencil enable false desc face stencil fail desc face stencil depth fail desc face stencil pass stencil desc face stencil func comparison func desc face desc face hresult result pipeline device create graphics pipeline pso desc iid ppv args pipeline vertex shader blob release pixel shader blob release result pipeline return false gui impl create fonts texture return true void gui impl invalidate device objects gui impl data gui impl backend data device return gui gui safe release root signature safe release pipeline safe release font texture resource fonts set tex copied font texture view fonts tex clear uint num frames flight gui impl render buffers frame resources safe release buffer safe release vertex buffer bool gui impl init device device int num frames flight dxgi format rtv format descriptor heap cbv srv heap cpu descriptor handle font srv cpu desc handle gpu descriptor handle font srv gpu desc handle gui gui assert backend renderer user data nullptr initialized renderer backend setup backend capabilities flags gui impl data gui impl data backend renderer user data void backend renderer imgui impl backend flags gui backend flags renderer vtx offset honor draw cmd vtx offset field allowing large meshes device device rtv format rtv format font srv cpu desc handle font srv cpu desc handle font srv gpu desc handle font srv gpu desc handle frame resources gui impl render buffers num frames flight num frames flight num frames flight srv desc heap cbv srv heap frame uint max create buffers default size grown needed int num frames flight gui impl render buffers frame resources buffer nullptr vertex buffer nullptr buffer size vertex buffer size return true void gui impl shutdown gui impl data gui impl backend data assert nullptr renderer backend shutdown shutdown gui gui clean windows device objects gui impl invalidate device objects delete frame resources backend renderer nullptr backend renderer user data nullptr backend flags gui backend flags renderer vtx offset delete void gui impl frame gui impl data gui impl backend data assert nullptr gui impl init pipeline gui impl create device objects endif ifndef imgui disable