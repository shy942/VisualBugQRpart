dear imgui renderer backend vulkan platform backend glfw sdl win custom implemented features renderer user texture binding descriptor set texture read faq texture discussions renderer large meshes support vertices bit indices bit systems user texture binding supported imconfig file define texture imgui impl vulkan cpp file details aim imgui impl vulkan cpp usable engine modification feel change code share feedback unmodified imgui impl files project examples folder examples prefer including entire imgui repository project copy submodule build backends learn dear gui faq started documentation local docs folder introduction links imgui cpp note reader integrate imgui impl vulkan cpp engine app common gui impl vulkan xxx functions structures interface imgui impl vulkan cpp rendering backend engine app helper gui impl vulkan xxx functions structures main cpp backend imgui impl vulkan cpp engine app code read comments imgui impl vulkan pragma ifndef imgui disable include imgui imgui impl api configuration order custom vulkan function loader disable default vulkan function prototypes provide define imgui impl vulkan prototypes convenience configuration flag order visible imgui impl vulkan cpp compilation unit add define imgui impl vulkan prototypes imconfig file compilation flag build uncomment recommended modifying imgui sources simply add cpp file gui impl vulkan load functions gui impl vulkan init custom function idea leave define imgui impl vulkan prototypes vulkan includes defined imgui impl vulkan prototypes defined prototypes define prototypes endif defined platform win khr defined nominmax define nominmax include vulkan vulkan include vulkan vulkan endif defined version defined khr dynamic rendering define imgui impl vulkan dynamic rendering endif initialization data gui impl vulkan init descriptor pool created descriptor pool create free descriptor set bit pool size large hold gui descriptor type combined image sampler descriptor dynamic rendering set dynamic rendering true pipeline rendering create info structure clear struct gui impl vulkan init info instance instance physical device physical device device device uint queue family queue queue descriptor pool descriptor pool requirements note render pass render pass dynamic rendering uint min image count uint image count min image count sample count flag bits msaa samples defaults sample count bit optional pipeline cache pipeline cache uint subpass optional dynamic rendering explicitly enable khr dynamic rendering extension vulkan bool dynamic rendering ifdef imgui impl vulkan dynamic rendering pipeline rendering create info khr pipeline rendering create info endif optional allocation debugging const allocation callbacks allocator void check result result err device size min allocation size minimum allocation size set satisfy zealous practices validation layer waste memory called user code imgui impl api bool gui impl vulkan init gui impl vulkan init info info imgui impl api void gui impl vulkan shutdown imgui impl api void gui impl vulkan frame imgui impl api void gui impl vulkan render draw data draw data draw data command buffer command buffer pipeline pipeline null handle imgui impl api bool gui impl vulkan create fonts texture imgui impl api void gui impl vulkan destroy fonts texture imgui impl api void gui impl vulkan set min image count uint min image count override min image count initialization swap chain recreated register texture descriptor set texture fixme experimental sense unsure design tackle problem post suggestions imgui impl api descriptor set gui impl vulkan add texture sampler sampler image view image view image layout image layout imgui impl api void gui impl vulkan remove texture descriptor set descriptor set optional load vulkan functions custom function loader imgui impl vulkan prototypes prototypes imgui impl api bool gui impl vulkan load functions pfn void function loader func const char function void user data void user data nullptr internal miscellaneous vulkan helpers main cpp multi viewport features engine app care functions functions exist facilitate readability maintenance multiple main cpp examples files multi viewport platform window implementation internally generally avoid exposing kind superfluous high level helpers bindings code duplicate exceptionally expose engine app code setup stuff swap chain render pass frame buffers read code learn vulkan recommended custom tailored code equivalent work gui impl vulkan xxx functions interact regular gui impl vulkan xxx functions struct gui impl vulkan frame struct gui impl vulkan window helpers imgui impl api void gui impl vulkan create resize window instance instance physical device physical device device device gui impl vulkan window wnd uint queue family const allocation callbacks allocator int int uint min image count imgui impl api void gui impl vulkan destroy window instance instance device device gui impl vulkan window wnd const allocation callbacks allocator imgui impl api surface format khr gui impl vulkan select surface format physical device physical device surface khr surface const format request formats int request formats count color space khr request color space imgui impl api mode khr gui impl vulkan select mode physical device physical device surface khr surface const mode khr request modes int request modes count imgui impl api int gui impl vulkan min image count mode mode khr mode helper structure hold data needed rendering frame main cpp multi viewport features engine app clear struct gui impl vulkan frame command pool command pool command buffer command buffer fence fence image backbuffer image view backbuffer view framebuffer framebuffer struct gui impl vulkan frame semaphores semaphore image acquired semaphore semaphore render complete semaphore helper structure hold data needed rendering context window main cpp multi viewport features engine app struct gui impl vulkan window int width int height swapchain khr swapchain surface khr surface surface format khr surface format mode khr mode render pass render pass pipeline pipeline window pipeline render pass passed gui impl vulkan init info bool dynamic rendering bool clear enable clear clear uint frame current frame rendered frame frame flight count uint image count number simultaneous flight frames returned swapchain images khr derived min image count uint semaphore count number simultaneous flight frames acquire image khr uint semaphore current set swapchain wait semaphores distinct frame data gui impl vulkan frame frames gui impl vulkan frame semaphores frame semaphores gui impl vulkan window memset void sizeof mode mode khr ensure error user set clear enable true endif ifndef imgui disable