dear imgui renderer web gpu platform binding glfw note web gpu experimental beta browsers break implemented features renderer user texture binding wgpu texture view texture read faq texture renderer large meshes support vertices bit indices unmodified imgui impl files project examples folder examples prefer including entire imgui repository project copy submodule build backends learn dear gui faq started documentation local docs folder introduction links imgui cpp changelog minor older stripped git history details configurable pipeline multisample struct breaking gui impl wgpu init takes gui impl wgpu init info structure variety parameters allowing easier fixed pipeline layout leak explicitly wgpu depth stencil standard removed defaults wgpu shader module wgsl descriptor code source wgpu mipmap filter mode linear wgpu filter mode linear align buffer sizes wgsl shaders precompiled spir reorganized backend pull data single structure facilitate usage multiple contexts xxxx access changed xxxx revert automatic pipeline layout generation fixed validation error default depth buffer settings fixed rendering depth buffer enabled wgpu texture format depth format parameter gui impl wgpu init nullptr null switch passing explicit buffer sizes wgpu render pass encoder set vertex buffer wgpu render pass encoder set buffer fixed latest specs add support draw data framebuffer scale replaced direct access draw cmd texture draw cmd tex requirement update latest web gpu specs compatible emscripten chrome canary change blending equation preserve alpha output buffer initial version include imgui ifndef imgui disable include imgui impl wgpu include limits include webgpu webgpu dear gui prototypes imgui internal extern gui hash data const void data size data size seed define memalign size align size align align memory align copied align macro web gpu data struct render resources wgpu texture font texture nullptr font texture wgpu texture view font texture view nullptr texture view font texture wgpu sampler sampler nullptr sampler font texture wgpu buffer uniforms nullptr shader uniforms wgpu bind group common bind group nullptr resources bind group bind common resources pipeline gui storage image bind groups resources bind group bind font image resources pipeline key map wgpu bind group image bind group nullptr default font resource dear gui wgpu bind group layout image bind group layout nullptr cache layout image bind group avoids allocating unnecessary objects working web asm struct frame resources wgpu buffer buffer wgpu buffer vertex buffer draw idx buffer host draw vert vertex buffer host int buffer size int vertex buffer size struct uniforms float mvp float gamma struct gui impl wgpu data gui impl wgpu init info init info wgpu device wgpu device nullptr wgpu queue default queue nullptr wgpu texture format render target format wgpu texture format undefined wgpu texture format depth stencil format wgpu texture format undefined wgpu render pipeline pipeline nullptr render resources render resources frame resources frame resources nullptr unsigned int num frames flight unsigned int frame uint max backend data stored backend renderer user data support multiple dear gui contexts preferred docking branch multi viewports single dear gui context multiple windows multiple dear gui contexts static gui impl wgpu data gui impl wgpu backend data return gui current context gui impl wgpu data gui backend renderer user data nullptr shaders static const char shader vert wgsl struct vertex input location position vec location vec location color vec struct vertex output builtin position position vec location color vec location vec struct uniforms mvp mat gamma group binding var uniform uniforms uniforms vertex main vertex input vertex output var vertex output position uniforms mvp vec position color color return static const char shader frag wgsl struct vertex output builtin position position vec location color vec location vec struct uniforms mvp mat gamma group binding var uniform uniforms uniforms group binding var sampler group binding var texture fragment main vertex output location vec color color texture sample corrected color pow color rgb vec uniforms gamma return vec corrected color color static void safe release draw idx res res delete res res nullptr static void safe release draw vert res res delete res res nullptr static void safe release wgpu bind group layout res res wgpu bind group layout release res res nullptr static void safe release wgpu bind group res res wgpu bind group release res res nullptr static void safe release wgpu buffer res res wgpu buffer release res res nullptr static void safe release wgpu pipeline layout res res wgpu pipeline layout release res res nullptr static void safe release wgpu render pipeline res res wgpu render pipeline release res res nullptr static void safe release wgpu sampler res res wgpu sampler release res res nullptr static void safe release wgpu shader module res res wgpu shader module release res res nullptr static void safe release wgpu texture view res res wgpu texture view release res res nullptr static void safe release wgpu texture res res wgpu texture release res res nullptr static void safe release render resources res safe release res font texture safe release res font texture view safe release res sampler safe release res uniforms safe release res common bind group safe release res image bind group safe release res image bind group layout static void safe release frame resources res safe release res buffer safe release res vertex buffer safe release res buffer host safe release res vertex buffer host static wgpu programmable stage descriptor gui impl wgpu create shader module const char wgsl source gui impl wgpu data gui impl wgpu backend data wgpu shader module wgsl descriptor wgsl desc wgsl desc chain type wgpus type shader module wgsl descriptor wgsl desc code wgsl source wgpu shader module descriptor desc desc chain reinterpret cast wgpu chained struct wgsl desc wgpu programmable stage descriptor stage desc stage desc module wgpu device create shader module wgpu device desc stage desc entry point main return stage desc static wgpu bind group gui impl wgpu create image bind group wgpu bind group layout layout wgpu texture view texture gui impl wgpu data gui impl wgpu backend data wgpu bind group entry image entries nullptr texture wgpu bind group descriptor image descriptor image descriptor layout layout image descriptor entry count sizeof image entries sizeof wgpu bind group entry image descriptor entries image entries return wgpu device create bind group wgpu device image descriptor static void gui impl wgpu setup render draw data draw data wgpu render pass encoder ctx frame resources gui impl wgpu data gui impl wgpu backend data setup orthographic projection matrix constant buffer visible imgui space lies draw data display pos left draw data display pos data data display size float draw data display pos float draw data display pos draw data display size float draw data display pos float draw data display pos draw data display size float mvp wgpu queue write buffer default queue render resources uniforms offsetof uniforms mvp mvp sizeof uniforms mvp float gamma switch render target format case wgpu texture format astc unorm srgb case wgpu texture format astc unorm srgb case wgpu texture format astc unorm srgb case wgpu texture format astc unorm srgb case wgpu texture format astc unorm srgb case wgpu texture format astc unorm srgb case wgpu texture format astc unorm srgb case wgpu texture format astc unorm srgb case wgpu texture format astc unorm srgb case wgpu texture format astc unorm srgb case wgpu texture format astc unorm srgb case wgpu texture format astc unorm srgb case wgpu texture format astc unorm srgb case wgpu texture format rgba unorm srgb case wgpu texture format rgba unorm srgb case wgpu texture format rgba unorm srgb case wgpu texture format rgba unorm srgb case wgpu texture format bgra unorm srgb case wgpu texture format rgb unorm srgb case wgpu texture format rgb unorm srgb case wgpu texture format rgba unorm srgb case wgpu texture format rgba unorm srgb gamma break default gamma wgpu queue write buffer default queue render resources uniforms offsetof uniforms gamma gamma sizeof uniforms gamma setup viewport wgpu render pass encoder set viewport ctx draw data framebuffer scale draw data display size draw data framebuffer scale draw data display size bind shader vertex buffers wgpu render pass encoder set vertex buffer ctx vertex buffer vertex buffer size sizeof draw vert wgpu render pass encoder set buffer ctx buffer sizeof draw idx wgpu format uint wgpu format uint buffer size sizeof draw idx wgpu render pass encoder set pipeline ctx pipeline wgpu render pass encoder set bind group ctx render resources common bind group nullptr setup blend factor wgpu color blend color wgpu render pass encoder set blend constant ctx blend color render function set render draw lists called gui render main loop void gui impl wgpu render draw data draw data draw data wgpu render pass encoder pass encoder avoid rendering minimized int width int draw data display size draw data framebuffer scale int height int draw data display size draw data framebuffer scale width height draw data cmd lists count return fixme assuming called frame allocate proper allocator gui impl wgpu data gui impl wgpu backend data frame frame frame resources frame resources frame num frames flight create grow vertex buffers needed vertex buffer nullptr vertex buffer size draw data total vtx count vertex buffer wgpu buffer destroy vertex buffer wgpu buffer release vertex buffer safe release vertex buffer host vertex buffer size draw data total vtx count wgpu buffer descriptor desc nullptr dear gui vertex buffer wgpu buffer usage copy dst wgpu buffer usage vertex memalign vertex buffer size sizeof draw vert false vertex buffer wgpu device create buffer wgpu device desc vertex buffer return vertex buffer host draw vert vertex buffer size buffer nullptr buffer size draw data total idx count buffer wgpu buffer destroy buffer wgpu buffer release buffer safe release buffer host buffer size draw data total idx count wgpu buffer descriptor desc nullptr dear gui buffer wgpu buffer usage copy dst wgpu buffer usage memalign buffer size sizeof draw idx false buffer wgpu device create buffer wgpu device desc buffer return buffer host draw idx buffer size upload vertex data single contiguous gpu buffer draw vert vtx dst draw vert vertex buffer host draw idx idx dst draw idx buffer host int draw data cmd lists count const draw list cmd list draw data cmd lists memcpy vtx dst cmd list vtx buffer data cmd list vtx buffer size sizeof draw vert memcpy idx dst cmd list idx buffer data cmd list idx buffer size sizeof draw idx vtx dst cmd list vtx buffer size idx dst cmd list idx buffer size int write size memalign char vtx dst char vertex buffer host int write size memalign char idx dst char buffer host wgpu queue write buffer default queue vertex buffer vertex buffer host write size wgpu queue write buffer default queue buffer buffer host write size setup desired render gui impl wgpu setup render draw data pass encoder render command lists merged buffers single maintain offset int global vtx offset int global idx offset vec clip scale draw data framebuffer scale vec clip draw data display pos int draw data cmd lists count const draw list cmd list draw data cmd lists int cmd cmd cmd list cmd buffer size cmd const draw cmd pcmd cmd list cmd buffer cmd pcmd user callback nullptr user callback registered draw list add callback draw callback reset render special callback user request renderer reset render pcmd user callback draw callback reset render gui impl wgpu setup render draw data pass encoder pcmd user callback cmd list pcmd bind custom texture texture tex pcmd tex gui tex hash hash data tex sizeof tex auto bind group render resources image bind groups void ptr tex hash bind group wgpu render pass encoder set bind group pass encoder wgpu bind group bind group nullptr wgpu bind group image bind group gui impl wgpu create image bind group render resources image bind group layout wgpu texture view tex render resources image bind groups set void ptr tex hash image bind group wgpu render pass encoder set bind group pass encoder image bind group nullptr project scissor clipping rectangles framebuffer space vec clip min pcmd clip rect clip clip scale pcmd clip rect clip clip scale vec clip max pcmd clip rect clip clip scale pcmd clip rect clip clip scale clamp viewport wgpu render pass encoder set scissor rect accept values bounds clip min clip min clip min clip min clip max width clip max float width clip max height clip max float height clip max clip min clip max clip min continue apply scissor clipping rectangle draw wgpu render pass encoder set scissor rect pass encoder uint clip min uint clip min uint clip max clip min uint clip max clip min wgpu render pass encoder draw indexed pass encoder pcmd elem count pcmd idx offset global idx offset pcmd vtx offset global vtx offset global idx offset cmd list idx buffer size global vtx offset cmd list vtx buffer size static void gui impl wgpu create fonts texture build texture atlas gui impl wgpu data gui impl wgpu backend data gui gui unsigned char pixels int width height size fonts tex data rgba pixels width height size upload texture graphics wgpu texture descriptor tex desc tex desc label dear gui font texture tex desc dimension wgpu texture dimension tex desc size width width tex desc size height height tex desc size depth array layers tex desc sample count tex desc format wgpu texture format rgba unorm tex desc mip level count tex desc usage wgpu texture usage copy dst wgpu texture usage texture binding render resources font texture wgpu device create texture wgpu device tex desc wgpu texture view descriptor tex view desc tex view desc format wgpu texture format rgba unorm tex view desc dimension wgpu texture view dimension tex view desc base mip level tex view desc mip level count tex view desc base array layer tex view desc array layer count tex view desc aspect wgpu texture aspect render resources font texture view wgpu texture create view render resources font texture tex view desc upload texture data wgpu image copy texture dst view dst view texture render resources font texture dst view mip level dst view origin dst view aspect wgpu texture aspect wgpu texture data layout layout layout offset layout bytes row width size layout rows image height wgpu extent size uint width uint height wgpu queue write texture default queue dst view pixels uint width size height layout size create sampler bilinear sampling required default set fonts flags font atlas flags baked lines style anti aliased lines tex false point nearest sampling wgpu sampler descriptor sampler desc sampler desc min filter wgpu filter mode linear sampler desc mag filter wgpu filter mode linear sampler desc mipmap filter wgpu mipmap filter mode linear sampler desc address mode wgpu address mode repeat sampler desc address mode wgpu address mode repeat sampler desc address mode wgpu address mode repeat sampler desc max anisotropy render resources sampler wgpu device create sampler wgpu device sampler desc store identifier static assert sizeof texture sizeof render resources font texture pack descriptor handle tex bit supported fonts set tex texture render resources font texture view static void gui impl wgpu create uniform buffer gui impl wgpu data gui impl wgpu backend data wgpu buffer descriptor desc nullptr dear gui uniform buffer wgpu buffer usage copy dst wgpu buffer usage uniform memalign sizeof uniforms false render resources uniforms wgpu device create buffer wgpu device desc bool gui impl wgpu create device objects gui impl wgpu data gui impl wgpu backend data wgpu device return false pipeline gui impl wgpu invalidate device objects create render pipeline wgpu render pipeline descriptor graphics pipeline desc graphics pipeline desc primitive topology wgpu primitive topology triangle list graphics pipeline desc primitive strip format wgpu format undefined graphics pipeline desc primitive face wgpu face graphics pipeline desc primitive cull mode wgpu cull mode graphics pipeline desc multisample init info pipeline multisample bind group layouts wgpu bind group layout entry common layout entries common layout entries binding common layout entries visibility wgpu shader stage vertex wgpu shader stage fragment common layout entries buffer type wgpu buffer binding type uniform common layout entries binding common layout entries visibility wgpu shader stage fragment common layout entries sampler type wgpu sampler binding type filtering wgpu bind group layout entry image layout entries image layout entries binding image layout entries visibility wgpu shader stage fragment image layout entries texture sample type wgpu texture sample type float image layout entries texture view dimension wgpu texture view dimension wgpu bind group layout descriptor common layout desc common layout desc entry count common layout desc entries common layout entries wgpu bind group layout descriptor image layout desc image layout desc entry count image layout desc entries image layout entries wgpu bind group layout layouts layouts wgpu device create bind group layout wgpu device common layout desc layouts wgpu device create bind group layout wgpu device image layout desc wgpu pipeline layout descriptor layout desc layout desc bind group layout count layout desc bind group layouts layouts graphics pipeline desc layout wgpu device create pipeline layout wgpu device layout desc create vertex shader wgpu programmable stage descriptor vertex shader desc gui impl wgpu create shader module shader vert wgsl graphics pipeline desc vertex module vertex shader desc module graphics pipeline desc vertex entry point vertex shader desc entry point vertex input configuration wgpu vertex attribute attribute desc wgpu vertex format float uint offsetof draw vert pos wgpu vertex format float uint offsetof draw vert wgpu vertex format unorm uint offsetof draw vert col wgpu vertex buffer layout buffer layouts buffer layouts array stride sizeof draw vert buffer layouts step mode wgpu vertex step mode vertex buffer layouts attribute count buffer layouts attributes attribute desc graphics pipeline desc vertex buffer count graphics pipeline desc vertex buffers buffer layouts create pixel shader wgpu programmable stage descriptor pixel shader desc gui impl wgpu create shader module shader frag wgsl create blending setup wgpu blend blend blend alpha operation wgpu blend operation add blend alpha src factor wgpu blend factor blend alpha dst factor wgpu blend factor src alpha blend color operation wgpu blend operation add blend color src factor wgpu blend factor src alpha blend color dst factor wgpu blend factor src alpha wgpu color target color color format render target format color blend blend color write mask wgpu color write mask wgpu fragment fragment fragment module pixel shader desc module fragment entry point pixel shader desc entry point fragment target count fragment targets color graphics pipeline desc fragment fragment create depth stencil wgpu depth stencil depth stencil depth stencil format depth stencil format depth stencil depth write enabled false depth stencil depth compare wgpu compare function depth stencil stencil compare wgpu compare function depth stencil stencil fail wgpu stencil operation depth stencil stencil depth fail wgpu stencil operation depth stencil stencil pass wgpu stencil operation depth stencil stencil compare wgpu compare function depth stencil stencil fail wgpu stencil operation depth stencil stencil depth fail wgpu stencil operation depth stencil stencil pass wgpu stencil operation configure disabled depth stencil graphics pipeline desc depth stencil depth stencil format wgpu texture format undefined nullptr depth stencil pipeline wgpu device create render pipeline wgpu device graphics pipeline desc gui impl wgpu create fonts texture gui impl wgpu create uniform buffer create resource bind group wgpu bind group entry common entries nullptr render resources uniforms memalign sizeof uniforms nullptr render resources sampler wgpu bind group descriptor common descriptor common descriptor layout layouts common descriptor entry count sizeof common entries sizeof wgpu bind group entry common descriptor entries common entries render resources common bind group wgpu device create bind group wgpu device common descriptor wgpu bind group image bind group gui impl wgpu create image bind group layouts render resources font texture view render resources image bind group image bind group render resources image bind group layout layouts render resources image bind groups set void ptr hash data render resources font texture view sizeof texture image bind group safe release vertex shader desc module safe release pixel shader desc module safe release graphics pipeline desc layout safe release layouts return true void gui impl wgpu invalidate device objects gui impl wgpu data gui impl wgpu backend data wgpu device return safe release pipeline safe release render resources gui gui fonts set tex copied font texture view fonts tex clear unsigned int num frames flight safe release frame resources bool gui impl wgpu init gui impl wgpu init info init info gui gui assert backend renderer user data nullptr initialized renderer backend setup backend capabilities flags gui impl wgpu data gui impl wgpu data backend renderer user data void backend renderer imgui impl webgpu backend flags gui backend flags renderer vtx offset honor draw cmd vtx offset field allowing large meshes init info init info wgpu device init info device default queue wgpu device queue wgpu device render target format init info render target format depth stencil format init info depth stencil format num frames flight init info num frames flight frame uint max render resources font texture nullptr render resources font texture view nullptr render resources sampler nullptr render resources uniforms nullptr render resources common bind group nullptr render resources image bind groups data reserve render resources image bind group nullptr render resources image bind group layout nullptr create buffers default size grown needed frame resources frame resources num frames flight int num frames flight frame resources frame resources buffer nullptr vertex buffer nullptr buffer host nullptr vertex buffer host nullptr buffer size vertex buffer size return true void gui impl wgpu shutdown gui impl wgpu data gui impl wgpu backend data assert nullptr renderer backend shutdown shutdown gui gui gui impl wgpu invalidate device objects delete frame resources frame resources nullptr wgpu queue release default queue wgpu device nullptr num frames flight frame uint max backend renderer nullptr backend renderer user data nullptr backend flags gui backend flags renderer vtx offset delete void gui impl wgpu frame gui impl wgpu data gui impl wgpu backend data pipeline gui impl wgpu create device objects endif ifndef imgui disable