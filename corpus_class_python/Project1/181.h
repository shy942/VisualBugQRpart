glfw library open window input copyright marcus geelnard copyright camilla berglund elmindreda elmindreda org software express implied warranty event authors held liable damages arising software permission granted software purpose including commercial applications alter redistribute freely subject restrictions origin software misrepresented claim wrote original software software product acknowledgment product documentation appreciated required altered source versions plainly marked misrepresented original software notice removed altered source distribution ifndef glfw define glfw ifdef cplusplus extern endif doxygen documentation file glfw header glfw api header file glfw api defines types declares functions file build include defgroup context context reference reference documentation open open context functions task oriented context guide defgroup vulkan vulkan reference reference documentation vulkan functions types task oriented vulkan guide defgroup init initialization version error reference reference documentation initialization termination library version management error handling task oriented intro guide defgroup input input reference reference documentation input functions types task oriented input guide defgroup monitor monitor reference reference documentation monitor functions types task oriented monitor guide defgroup window window reference reference documentation window functions types including creation deletion event polling task oriented window guide compiler platform specific preprocessor work windows single define defined win defined win defined win defined mingw define win endif win customary apientry open function pointer declarations platforms additionally windows open header apientry ifndef apientry ifdef win define apientry stdcall define apientry endif endif apientry windows open headers defined wingdiapi defined win define wingdiapi declspec dllimport define glfw wingdiapi defined endif wingdiapi windows glu headers defined callback defined win define callback stdcall define glfw callback defined endif callback windows glu headers wchar open header blocks definition ptrdiff glext include unconditionally avoid surprising effects include stddef include stdint include chosen client api headers defined apple defined glfw include glcorearb include open defined glfw include glext include open ext endif elif defined glfw include defined glfw include glext define glext legacy endif include open endif defined glfw include glu include open glu endif defined glfw include glcorearb include glcorearb elif defined glfw include include gles defined glfw include glext include gles glext endif elif defined glfw include include gles defined glfw include glext include gles ext endif elif defined glfw include include gles defined glfw include glext include gles ext endif elif defined glfw include include gles defined glfw include glext include gles ext endif elif defined glfw include vulkan include vulkan vulkan elif defined glfw include include defined glfw include glext include glext endif endif defined glfw include glu include glu endif endif defined glfw dll defined glfw build dll glfw dll defined applications linking dll version glfw library glfw build dll defined glfw configuration header compiling dll version library error glfw dll glfw build dll defined endif glfwapi declare public api functions export dll shared library dynamic library defined win defined glfw build dll building glfw win dll define glfwapi declspec dllexport elif defined win defined glfw dll calling glfw win dll define glfwapi declspec dllimport elif defined gnuc defined glfw build dll building glfw shared dynamic library define glfwapi attribute visibility default building calling glfw static library define glfwapi endif glfw api tokens glfw version macros major version number glfw library incremented api changed compatible ways ingroup init define glfw version major minor version number glfw library incremented features api remains compatible ingroup init define glfw version minor revision number glfw library incremented bug release api ingroup init define glfw version revision boolean values symbol code semantic sugar number true true true define glfw true symbol code semantic sugar number false false false define glfw false key button actions key mouse button released key mouse button released ingroup input define glfw release key mouse button pressed key mouse button pressed ingroup input define glfw press key held repeated key held repeated ingroup input define glfw repeat defgroup keyboard key input input key key codes inspired usb usage tables arranged map bit ascii printable function range naming key codes follow rules keyboard layout names printable alpha numeric characters alphanumeric characters unicode ish names comma left square bracket note names correspond unicode standard brevity lack clear mapping named printable custom names backspace ingroup input unknown key define glfw key unknown printable define glfw key space define glfw key apostrophe define glfw key comma define glfw key define glfw key period define glfw key slash define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key semicolon define glfw key equal define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key left bracket define glfw key backslash define glfw key bracket define glfw key grave accent define glfw key define glfw key function define glfw key escape define glfw key enter define glfw key tab define glfw key backspace define glfw key insert define glfw key delete define glfw key define glfw key left define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key caps lock define glfw key scroll lock define glfw key num lock define glfw key print screen define glfw key pause define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key define glfw key decimal define glfw key divide define glfw key multiply define glfw key subtract define glfw key add define glfw key enter define glfw key equal define glfw key left shift define glfw key left control define glfw key left alt define glfw key left super define glfw key shift define glfw key control define glfw key alt define glfw key super define glfw key menu define glfw key glfw key menu defgroup mods modifier key flags key input input key ingroup input bit set shift held define glfw mod shift bit set control held define glfw mod control bit set alt held define glfw mod alt bit set super held define glfw mod super defgroup buttons mouse buttons mouse button input input mouse button ingroup input define glfw mouse button define glfw mouse button define glfw mouse button define glfw mouse button define glfw mouse button define glfw mouse button define glfw mouse button define glfw mouse button define glfw mouse button glfw mouse button define glfw mouse button left glfw mouse button define glfw mouse button glfw mouse button define glfw mouse button middle glfw mouse button defgroup joysticks joysticks joystick input joystick ingroup input define glfw joystick define glfw joystick define glfw joystick define glfw joystick define glfw joystick define glfw joystick define glfw joystick define glfw joystick define glfw joystick define glfw joystick define glfw joystick define glfw joystick define glfw joystick define glfw joystick define glfw joystick define glfw joystick define glfw joystick glfw joystick defgroup errors error codes error handling error handling ingroup init glfw initialized occurs glfw function called called library initialized intro init analysis application programmer error initialize glfw calling function requires initialization define glfw initialized context current thread occurs glfw function called operates current open open context context current calling thread function glfw swap interval analysis application programmer error ensure context current calling functions require current context define glfw current context arguments function invalid enum arguments function invalid enum requesting glfw red bits window hints glfw window attrib analysis application programmer error offending define glfw invalid enum arguments function invalid arguments function invalid requesting existent open open version requesting valid unavailable open open version result glfw version unavailable error analysis application programmer error offending define glfw invalid memory allocation failed memory allocation failed analysis bug glfw underlying operating report bug issue tracker define glfw memory glfw support requested api glfw support requested api analysis installed graphics driver support requested api support chosen context creation backend examples par pre installed windows graphics drivers support open amd supports open egl nvidia intel support wgl glx extension provide open mesa egl open open libraries interface nvidia binary driver older graphics drivers support vulkan define glfw api unavailable requested open open version requested open open version including requested context framebuffer hints machine analysis machine support requirements application flexible downgrade requirements inform user machine match requirements par future invalid open open versions open series fail error glfw invalid glfw future versions exist define glfw version unavailable platform specific error occurred match specific categories platform specific error occurred match specific categories analysis bug configuration error glfw underlying operating drivers lack required resources report issue issue tracker define glfw platform error requested format supported emitted window creation requested pixel format supported emitted querying clipboard contents clipboard converted requested format analysis emitted window creation hard constraints window hints hard match pixel formats application flexible downgrade requirements inform user machine match requirements par emitted querying clipboard ignore error report user define glfw format unavailable window open open context window open open context passed function requires analysis application programmer error offending define glfw window context define glfw focused define glfw iconified define glfw resizable define glfw visible define glfw decorated define glfw auto iconify define glfw floating define glfw maximized define glfw red bits define glfw green bits define glfw blue bits define glfw alpha bits define glfw depth bits define glfw stencil bits define glfw accum red bits define glfw accum green bits define glfw accum blue bits define glfw accum alpha bits define glfw aux buffers define glfw stereo define glfw samples define glfw srgb capable define glfw refresh rate define glfw doublebuffer define glfw client api define glfw context version major define glfw context version minor define glfw context revision define glfw context robustness define glfw opengl compat define glfw opengl debug context define glfw opengl profile define glfw context release behavior define glfw context error define glfw api define glfw opengl api define glfw opengl api define glfw robustness define glfw reset notification define glfw lose context reset define glfw opengl profile define glfw opengl core profile define glfw opengl compat profile define glfw cursor define glfw sticky define glfw sticky mouse buttons define glfw cursor normal define glfw cursor hidden define glfw cursor disabled define glfw release behavior define glfw release behavior flush define glfw release behavior defgroup shapes standard cursor shapes standard cursor creation cursor standard ingroup input regular arrow cursor shape regular arrow cursor define glfw arrow cursor text input beam cursor shape text input beam cursor shape define glfw ibeam cursor crosshair shape crosshair shape define glfw crosshair cursor hand shape hand shape define glfw hand cursor horizontal resize arrow shape horizontal resize arrow shape define glfw hresize cursor vertical resize arrow shape vertical resize arrow shape define glfw vresize cursor define glfw connected define glfw disconnected define glfw dont care glfw api types client api function pointer type generic function pointer returning client api function pointers forcing cast regular pointer context glext glfw proc address version ingroup context typedef void glf wglproc void vulkan api function pointer type generic function pointer returning vulkan api function pointers forcing cast regular pointer vulkan proc glfw instance proc address version ingroup vulkan typedef void glf wvkproc void opaque monitor object opaque monitor object monitor object version ingroup monitor typedef struct glf wmonitor glf wmonitor opaque window object opaque window object window object version ingroup window typedef struct glf wwindow glf wwindow opaque cursor object opaque cursor object cursor object version ingroup cursor typedef struct glf wcursor glf wcursor function signature error callbacks function signature error callback functions param error error code errors param description utf encoded string describing error error handling glfw set error callback version ingroup init typedef void glf werrorfun int const char function signature window position callbacks function signature window position callback functions param window window moved param xpos coordinate screen coordinates upper left corner client area window param ypos coordinate screen coordinates upper left corner client area window window pos glfw set window pos callback version ingroup window typedef void glf wwindowposfun glf wwindow int int function signature window resize callbacks function signature window size callback functions param window window resized param width width screen coordinates window param height height screen coordinates window window size glfw set window size callback version glfw window handle parameter ingroup window typedef void glf wwindowsizefun glf wwindow int int function signature window close callbacks function signature window close callback functions param window window user attempted close window close glfw set window close callback version glfw window handle parameter ingroup window typedef void glf wwindowclosefun glf wwindow function signature window content refresh callbacks function signature window refresh callback functions param window window content refreshed window refresh glfw set window refresh callback version glfw window handle parameter ingroup window typedef void glf wwindowrefreshfun glf wwindow function signature window focus defocus callbacks function signature window focus callback functions param window window gained lost input focus param focused glfw true window input focus glfw false lost window focus glfw set window focus callback version ingroup window typedef void glf wwindowfocusfun glf wwindow int function signature window iconify restore callbacks function signature window iconify restore callback functions param window window iconified restored param iconified glfw true window iconified glfw false restored window iconify glfw set window iconify callback version ingroup window typedef void glf wwindowiconifyfun glf wwindow int function signature framebuffer resize callbacks function signature framebuffer resize callback functions param window window framebuffer resized param width width pixels framebuffer param height height pixels framebuffer window fbsize glfw set framebuffer size callback version ingroup window typedef void glf wframebuffersizefun glf wwindow int int function signature mouse button callbacks function signature mouse button callback functions param window window received event param button mouse button buttons pressed released param action glfw press glfw release param mods bit field describing modifier mods held input mouse button glfw set mouse button callback version glfw window handle modifier mask parameters ingroup input typedef void glf wmousebuttonfun glf wwindow int int int function signature cursor position callbacks function signature cursor position callback functions param window window received event param xpos cursor coordinate relative left edge client area param ypos cursor coordinate relative edge client area cursor pos glfw set cursor pos callback version replaces glf wmouseposfun ingroup input typedef void glf wcursorposfun glf wwindow double double function signature cursor enter leave callbacks function signature cursor enter leave callback functions param window window received event param entered glfw true cursor entered window client area glfw false left cursor enter glfw set cursor enter callback version ingroup input typedef void glf wcursorenterfun glf wwindow int function signature scroll callbacks function signature scroll callback functions param window window received event param xoffset scroll offset axis param yoffset scroll offset axis scrolling glfw set scroll callback version replaces glf wmousewheelfun ingroup input typedef void glf wscrollfun glf wwindow double double function signature keyboard key callbacks function signature keyboard key callback functions param window window received event param key keyboard key pressed released param scancode specific scancode key param action glfw press glfw release glfw repeat param mods bit field describing modifier mods held input key glfw set key callback version glfw window handle scancode modifier mask parameters ingroup input typedef void glf wkeyfun glf wwindow int int int int function signature unicode character callbacks function signature unicode character callback functions param window window received event param codepoint unicode code point character input char glfw set char callback version glfw window handle parameter ingroup input typedef void glf wcharfun glf wwindow unsigned int function signature unicode character modifiers callbacks function signature unicode character modifiers callback functions called input character modifier held param window window received event param codepoint unicode code point character param mods bit field describing modifier mods held input char glfw set char mods callback version ingroup input typedef void glf wcharmodsfun glf wwindow unsigned int int function signature file drop callbacks function signature file drop callbacks param window window received event param count number dropped files param paths utf encoded file directory path names path drop glfw set drop callback version ingroup input typedef void glf wdropfun glf wwindow int const char function signature monitor configuration callbacks function signature monitor configuration callback functions param monitor monitor connected disconnected param event glfw connected glfw disconnected monitor event glfw set monitor callback version ingroup monitor typedef void glf wmonitorfun glf wmonitor int function signature joystick configuration callbacks function signature joystick configuration callback functions param joy joystick connected disconnected param event glfw connected glfw disconnected joystick event glfw set joystick callback version ingroup input typedef void glf wjoystickfun int int video mode type describes single video mode monitor modes glfw video mode glfw video modes version glfw refresh rate member ingroup monitor typedef struct glf wvidmode width screen coordinates video mode int width height screen coordinates video mode int height bit depth red channel video mode int red bits bit depth green channel video mode int green bits bit depth blue channel video mode int blue bits refresh rate video mode int refresh rate glf wvidmode gamma ramp describes gamma ramp monitor monitor gamma glfw gamma ramp glfw set gamma ramp version ingroup monitor typedef struct glf wgammaramp array describing response red channel unsigned short red array describing response green channel unsigned short green array describing response blue channel unsigned short blue number elements array unsigned int size glf wgammaramp image data cursor custom version glfw removed format bytes pixel members typedef struct glf wimage width pixels image int width height pixels image int height pixel data image arranged left unsigned char pixels glf wimage glfw api functions initializes glfw library function initializes glfw library glfw functions glfw initialized application terminates glfw terminated order free resources allocated initialization function fails calls glfw terminate returning succeeds glfw terminate application exits additional calls function successful initialization termination return glfw true return glfw true successful glfw false error error handling occurred errors errors include glfw platform error remark osx function change current directory application contents resources subdirectory application bundle disabled compile time option compile options osx thread safety function called main thread intro init glfw terminate version ingroup init glfwapi int glfw init void terminates glfw library function destroys remaining windows cursors restores modified gamma ramps frees allocated resources function called glfw init glfw functions glfw initialized function called application exits initialization fails function called glfw init returns failure errors errors include glfw platform error remark function called glfw init warning contexts remaining windows current thread function called reentrancy function called callback thread safety function called main thread intro init glfw init version ingroup init glfwapi void glfw terminate void retrieves version glfw library function retrieves major minor revision numbers glfw library intended glfw shared library ensure minimum required version version arguments null param major store major version number null param minor store minor version number null param rev store revision number null errors remark function called glfw init thread safety function called thread intro version glfw version string version ingroup init glfwapi void glfw version int major int minor int rev returns string describing compile time configuration function returns compile time generated version string intro version string glfw library binary describes version platform compiler platform specific compile time options confused open open version string queried string version string parse glfw library version glfw version function version running library binary numerical format return ascii encoded glfw version string errors remark function called glfw init pointer lifetime returned string static compile time generated thread safety function called thread intro version glfw version version ingroup init glfwapi const char glfw version string void sets error callback function sets error callback called error code human readable description time glfw error occurs error callback called thread error occurred glfw multiple threads error callback written description string generated error guaranteed valid callback returned callback returns copy set error callback remains set library terminated param cbfun callback null remove set callback return set callback null callback set errors remark function called glfw init thread safety function called main thread error handling version ingroup init glfwapi glf werrorfun glfw set error callback glf werrorfun cbfun returns connected monitors function returns array handles connected monitors primary monitor returned array monitors function returns null param count store number monitors returned array set error occurred return array monitor handles null monitors error error handling occurred errors errors include glfw initialized pointer lifetime returned array allocated freed glfw free guaranteed valid monitor configuration library terminated thread safety function called main thread monitor monitors monitor event glfw primary monitor version ingroup monitor glfwapi glf wmonitor glfw monitors int count returns primary monitor function returns primary monitor monitor elements task bar global menu bar located return primary monitor null monitors error error handling occurred errors errors include glfw initialized thread safety function called main thread remark primary monitor array returned glfw monitors monitor monitors glfw monitors version ingroup monitor glfwapi glf wmonitor glfw primary monitor void returns position monitor viewport virtual screen function returns position screen coordinates upper left corner monitor position arguments null error occurs null position arguments set param monitor monitor query param xpos store monitor coordinate null param ypos store monitor coordinate null errors errors include glfw initialized glfw platform error thread safety function called main thread monitor properties version ingroup monitor glfwapi void glfw monitor pos glf wmonitor monitor int xpos int ypos returns physical size monitor function returns size millimetres display area monitor systems provide accurate monitor size monitor edid data incorrect driver report accurately size arguments null error occurs null size arguments set param monitor monitor query param width store width millimetres monitor display area null param height store height millimetres monitor display area null errors errors include glfw initialized remark win calculates returned physical size current resolution dpi querying monitor edid data thread safety function called main thread monitor properties version ingroup monitor glfwapi void glfw monitor physical size glf wmonitor monitor int width int height returns monitor function returns human readable encoded utf monitor typically reflects model monitor guaranteed unique connected monitors param monitor monitor query return utf encoded monitor null error error handling occurred errors errors include glfw initialized pointer lifetime returned string allocated freed glfw free valid monitor disconnected library terminated thread safety function called main thread monitor properties version ingroup monitor glfwapi const char glfw monitor glf wmonitor monitor sets monitor configuration callback function sets monitor configuration callback removes set callback called monitor connected disconnected param cbfun callback null remove set callback return set callback null callback set library initialized intro init errors errors include glfw initialized thread safety function called main thread monitor event version ingroup monitor glfwapi glf wmonitorfun glfw set monitor callback glf wmonitorfun cbfun returns video modes monitor function returns array video modes supported monitor returned array sorted ascending order color bit depth sum channel depths resolution area product width height param monitor monitor query param count store number video modes returned array set error occurred return array video modes null error error handling occurred errors errors include glfw initialized glfw platform error pointer lifetime returned array allocated freed glfw free valid monitor disconnected function called monitor library terminated thread safety function called main thread monitor modes glfw video mode version glfw changed return array modes specific monitor ingroup monitor glfwapi const glf wvidmode glfw video modes glf wmonitor monitor int count returns current mode monitor function returns current video mode monitor created screen window monitor return depend window iconified param monitor monitor query return current mode monitor null error error handling occurred errors errors include glfw initialized glfw platform error pointer lifetime returned array allocated freed glfw free valid monitor disconnected library terminated thread safety function called main thread monitor modes glfw video modes version replaces glfw desktop mode ingroup monitor glfwapi const glf wvidmode glfw video mode glf wmonitor monitor generates gamma ramp sets monitor function generates element gamma ramp exponent calls glfw set gamma ramp finite number greater param monitor monitor gamma ramp set param gamma desired exponent errors errors include glfw initialized glfw invalid glfw platform error thread safety function called main thread monitor gamma version ingroup monitor glfwapi void glfw set gamma glf wmonitor monitor float gamma returns current gamma ramp monitor function returns current gamma ramp monitor param monitor monitor query return current gamma ramp null error error handling occurred errors errors include glfw initialized glfw platform error pointer lifetime returned structure arrays allocated freed glfw free valid monitor disconnected function called monitor library terminated thread safety function called main thread monitor gamma version ingroup monitor glfwapi const glf wgammaramp glfw gamma ramp glf wmonitor monitor sets current gamma ramp monitor function sets current gamma ramp monitor original gamma ramp monitor saved glfw time function called restored glfw terminate param monitor monitor gamma ramp set param ramp gamma ramp errors errors include glfw initialized glfw platform error remark gamma ramp sizes supported platforms graphics hardware remark win gamma ramp size pointer lifetime gamma ramp copied function returns thread safety function called main thread monitor gamma version ingroup monitor glfwapi void glfw set gamma ramp glf wmonitor monitor const glf wgammaramp ramp resets window hints default values function resets window hints default values window hints values errors errors include glfw initialized thread safety function called main thread window hints glfw window hint version ingroup window glfwapi void glfw default window hints void sets window hint desired function sets hints glfw create window hints set retain values changed glfw window hint glfw default window hints library terminated function check hint values valid set hints invalid values reported glfw create window param hint window hint window hints set param window hint errors errors include glfw initialized glfw invalid enum thread safety function called main thread window hints glfw default window hints version replaces glfw open window hint ingroup window glfwapi void glfw window hint int hint int creates window context function creates window open open context options controlling window context created window hints window hints successful creation change context current newly created context current context current share parameter context sharing created window framebuffer context differ requested parameters hints hard constraints window hints hard includes size window screen windows query actual attributes created window framebuffer context glfw window attrib glfw window size glfw framebuffer size create screen window monitor window cover monitor window windowed mode user choose specific monitor recommended pick primary monitor query connected monitors monitor monitors screen windows size resolution window desired video mode long screen window iconified supported video mode closely matching desired video mode set monitor screen windows including creation called windowed screen borderless screen windows window windowed screen default newly created windows placement recommended window create window specific position initially invisible glfw visible window hints wnd window hint set position window pos window hide long screen window iconified screensaver prohibited starting window systems limits window sizes large small window dimensions overridden window creation check actual size window size creation swap interval buffer swap set window creation initial vary depending driver settings defaults param width desired width screen coordinates window greater param height desired height screen coordinates window greater param title initial utf encoded window title param monitor monitor screen mode null windowed mode param share window context share resources null share resources return handle created window null error error handling occurred errors errors include glfw initialized glfw invalid enum glfw invalid glfw api unavailable glfw version unavailable glfw format unavailable glfw platform error remark win window creation fail microsoft gdi software open implementation remark win executable icon resource named glfw icon set icon window icon idi winlogo icon remark win context share resources current thread remark osx glfw window icon document window dock icon application bundle icon bundles bundle programming guide mac developer library remark osx time window created menu bar populated common commands hide quit entry opens minimal dialog application bundle menu bar disabled compile time option compile options osx remark osx window frame rendered resolution retina displays high resolution capable key enabled application bundle info plist high resolution guidelines mac developer library glfw test programs custom info plist template mac osx bundle info plist source tree remark mechanism setting window icon remark window managers respect placement initially hidden windows remark asynchronous nature moment window reach requested query final size position attributes window creation reentrancy function called callback thread safety function called main thread window creation glfw destroy window version replaces glfw open window ingroup window glfwapi glf wwindow glfw create window int width int height const char title glf wmonitor monitor glf wwindow share destroys window context function destroys window context calling function callbacks called window context window current main thread detached destroyed param window window destroy errors errors include glfw initialized glfw platform error note context window current thread function called reentrancy function called callback thread safety function called main thread window creation glfw create window version replaces glfw close window ingroup window glfwapi void glfw destroy window glf wwindow window checks close flag window function returns close flag window param window window query return close flag errors errors include glfw initialized thread safety function called thread access synchronized window close version ingroup window glfwapi int glfw window close glf wwindow window sets close flag window function sets close flag window override user attempt close window signal closed param window window flag change param errors errors include glfw initialized thread safety function called thread access synchronized window close version ingroup window glfwapi void glfw set window close glf wwindow window int sets title window function sets window title encoded utf window param window window title change param title utf encoded window title errors errors include glfw initialized glfw platform error remark osx window title updated time process events thread safety function called main thread window title version glfw window handle parameter ingroup window glfwapi void glfw set window title glf wwindow window const char title sets icon window function sets icon window passed array candidate images closest sizes desired selected images window reverts default icon desired image sizes varies depending platform settings selected images rescaled needed good sizes include param window window icon set param count number images array revert default window icon param images images create icon count errors errors include glfw initialized glfw platform error pointer lifetime image data copied function returns remark osx glfw window icon document window dock icon application bundle icon bundles bundle programming guide mac developer library thread safety function called main thread window icon version ingroup window glfwapi void glfw set window icon glf wwindow window int count const glf wimage images retrieves position client area window function retrieves position screen coordinates upper left corner client area window position arguments null error occurs null position arguments set param window window query param xpos store coordinate upper left corner client area null param ypos store coordinate upper left corner client area null errors errors include glfw initialized glfw platform error thread safety function called main thread window pos glfw set window pos version ingroup window glfwapi void glfw window pos glf wwindow window int xpos int ypos sets position client area window function sets position screen coordinates upper left corner client area windowed mode window window screen window function function visible window good reasons confuse annoy user window manager limits positions allowed glfw override limits param window window query param xpos coordinate upper left corner client area param ypos coordinate upper left corner client area errors errors include glfw initialized glfw platform error thread safety function called main thread window pos glfw window pos version glfw window handle parameter ingroup window glfwapi void glfw set window pos glf wwindow window int xpos int ypos retrieves size client area window function retrieves size screen coordinates client area window retrieve size framebuffer window pixels glfw framebuffer size size arguments null error occurs null size arguments set param window window size retrieve param width store width screen coordinates client area null param height store height screen coordinates client area null errors errors include glfw initialized glfw platform error thread safety function called main thread window size glfw set window size version glfw window handle parameter ingroup window glfwapi void glfw window size glf wwindow window int width int height sets size limits window function sets size limits client area window window screen size limits windowed window resizable function size limits applied windowed mode window resized param window window set limits param minwidth minimum width screen coordinates client area glfw dont care param minheight minimum height screen coordinates client area glfw dont care param maxwidth maximum width screen coordinates client area glfw dont care param maxheight maximum height screen coordinates client area glfw dont care errors errors include glfw initialized glfw platform error remark set size limits aspect ratio conflict undefined thread safety function called main thread window sizelimits glfw set window aspect ratio version ingroup window glfwapi void glfw set window size limits glf wwindow window int minwidth int minheight int maxwidth int maxheight sets aspect ratio window function sets required aspect ratio client area window window screen aspect ratio takes windowed window resizable function aspect ratio numerator denominator values greater common aspect ratio numerator denominator set glfw dont care aspect ratio limit disabled aspect ratio applied windowed mode window resized param window window set limits param numer numerator desired aspect ratio glfw dont care param denom denominator desired aspect ratio glfw dont care errors errors include glfw initialized glfw invalid glfw platform error remark set size limits aspect ratio conflict undefined thread safety function called main thread window sizelimits glfw set window size limits version ingroup window glfwapi void glfw set window aspect ratio glf wwindow window int numer int denom sets size client area window function sets size screen coordinates client area window screen windows function updates resolution desired video mode switches video mode closest window context context unaffected bit depths framebuffer remain unchanged update refresh rate desired video mode addition resolution glfw set window monitor window manager limits sizes allowed glfw override limits param window window resize param width desired width screen coordinates window client area param height desired height screen coordinates window client area errors errors include glfw initialized glfw platform error thread safety function called main thread window size glfw window size glfw set window monitor version glfw window handle parameter ingroup window glfwapi void glfw set window size glf wwindow window int width int height retrieves size framebuffer window function retrieves size pixels framebuffer window retrieve size window screen coordinates glfw window size size arguments null error occurs null size arguments set param window window framebuffer query param width store width pixels framebuffer null param height store height pixels framebuffer null errors errors include glfw initialized glfw platform error thread safety function called main thread window fbsize glfw set framebuffer size callback version ingroup window glfwapi void glfw framebuffer size glf wwindow window int width int height retrieves size frame window function retrieves size screen coordinates edge frame window size includes title bar window size frame vary depending window hints window hints wnd create function retrieves size window frame edge offset coordinate axis retrieved values positive size arguments null error occurs null size arguments set param window window frame size query param left store size screen coordinates left edge window frame null param store size screen coordinates edge window frame null param store size screen coordinates edge window frame null param store size screen coordinates edge window frame null errors errors include glfw initialized glfw platform error thread safety function called main thread window size version ingroup window glfwapi void glfw window frame size glf wwindow window int left int int int iconifies window function iconifies minimizes window restored window iconified function window screen window original monitor resolution restored window restored param window window iconify errors errors include glfw initialized glfw platform error thread safety function called main thread window iconify glfw restore window glfw maximize window version glfw window handle parameter ingroup window glfwapi void glfw iconify window glf wwindow window restores window function restores window iconified minimized maximized window restored function window screen window resolution chosen window restored selected monitor param window window restore errors errors include glfw initialized glfw platform error thread safety function called main thread window iconify glfw iconify window glfw maximize window version glfw window handle parameter ingroup window glfwapi void glfw restore window glf wwindow window maximizes window function maximizes window maximized window maximized function window screen window function param window window maximize par thread safety function called main thread window iconify glfw iconify window glfw restore window glfw ingroup window glfwapi void glfw maximize window glf wwindow window window visible function window visible hidden window visible screen mode function param window window visible errors errors include glfw initialized glfw platform error thread safety function called main thread window hide glfw hide window version ingroup window glfwapi void glfw window glf wwindow window hides window function hides window visible window hidden screen mode function param window window hide errors errors include glfw initialized glfw platform error thread safety function called main thread window hide glfw window version ingroup window glfwapi void glfw hide window glf wwindow window brings window sets input focus function brings window sets input focus window visible iconified default windowed screen mode windows focused initially created set glfw focused window hints wnd disable behavior function steal focus applications user focus stealing extremely disruptive param window window input focus errors errors include glfw initialized glfw platform error thread safety function called main thread window focus version ingroup window glfwapi void glfw focus window glf wwindow window returns monitor window screen mode function returns handle monitor window screen param window window query return monitor null window windowed mode error occurred errors errors include glfw initialized thread safety function called main thread window monitor glfw set window monitor version ingroup window glfwapi glf wmonitor glfw window monitor glf wwindow window sets mode monitor video mode placement window function sets monitor window screen mode monitor null windowed mode setting monitor function updates width height refresh rate desired video mode switches video mode closest window position setting monitor monitor null position width height place window client area refresh rate monitor update resolution screen window size windowed mode window glfw set window size window transitions screen windowed mode function restores previous window settings decorated floating resizable size aspect ratio limits param window window monitor size video mode set param monitor desired monitor null set windowed mode param xpos desired coordinate upper left corner client area param ypos desired coordinate upper left corner client area param width desired screen coordinates client area video mode param height desired height screen coordinates client area video mode param refresh rate desired refresh rate video mode errors errors include glfw initialized glfw platform error thread safety function called main thread window monitor window screen glfw window monitor glfw set window size version ingroup window glfwapi void glfw set window monitor glf wwindow window glf wmonitor monitor int xpos int ypos int width int height int refresh rate returns attribute window function returns attribute window open open context param window window query param attrib window attribute window attribs return return attribute error error handling occurred errors errors include glfw initialized glfw invalid enum glfw platform error remark framebuffer hints window attributes window attribs remark valid window context attributes return indication errors function fail long passed valid arguments library initialized intro init thread safety function called main thread window attribs version replaces glfw window param glfw version ingroup window glfwapi int glfw window attrib glf wwindow window int attrib sets user pointer window function sets user defined pointer window current retained window destroyed initial null param window window pointer set param pointer errors errors include glfw initialized thread safety function called thread access synchronized window userptr glfw window user pointer version ingroup window glfwapi void glfw set window user pointer glf wwindow window void pointer returns user pointer window function returns current user defined pointer window initial null param window window pointer return errors errors include glfw initialized thread safety function called thread access synchronized window userptr glfw set window user pointer version ingroup window glfwapi void glfw window user pointer glf wwindow window sets position callback window function sets position callback window called window moved callback screen position upper left corner client area window param window window callback set param cbfun callback null remove set callback return set callback null callback set library initialized intro init errors errors include glfw initialized thread safety function called main thread window pos version ingroup window glfwapi glf wwindowposfun glfw set window pos callback glf wwindow window glf wwindowposfun cbfun sets size callback window function sets size callback window called window resized callback size screen coordinates client area window param window window callback set param cbfun callback null remove set callback return set callback null callback set library initialized intro init errors errors include glfw initialized thread safety function called main thread window size version glfw window handle parameter return ingroup window glfwapi glf wwindowsizefun glfw set window size callback glf wwindow window glf wwindowsizefun cbfun sets close callback window function sets close callback window called user attempts close window clicking close widget title bar close flag set callback called modify time glfw set window close close callback triggered glfw destroy window param window window callback set param cbfun callback null remove set callback return set callback null callback set library initialized intro init errors errors include glfw initialized remark osx selecting quit application menu trigger close callback windows thread safety function called main thread window close version glfw window handle parameter return ingroup window glfwapi glf wwindowclosefun glfw set window close callback glf wwindow window glf wwindowclosefun cbfun sets refresh callback window function sets refresh callback window called client area window redrawn window exposed covered window compositing window systems aero compiz aqua window contents saved screen callback called infrequently param window window callback set param cbfun callback null remove set callback return set callback null callback set library initialized intro init errors errors include glfw initialized thread safety function called main thread window refresh version glfw window handle parameter return ingroup window glfwapi glf wwindowrefreshfun glfw set window refresh callback glf wwindow window glf wwindowrefreshfun cbfun sets focus callback window function sets focus callback window called window gains loses input focus focus callback called window lost input focus synthetic key mouse button release events generated pressed glfw set key callback glfw set mouse button callback param window window callback set param cbfun callback null remove set callback return set callback null callback set library initialized intro init errors errors include glfw initialized thread safety function called main thread window focus version ingroup window glfwapi glf wwindowfocusfun glfw set window focus callback glf wwindow window glf wwindowfocusfun cbfun sets iconify callback window function sets iconification callback window called window iconified restored param window window callback set param cbfun callback null remove set callback return set callback null callback set library initialized intro init errors errors include glfw initialized thread safety function called main thread window iconify version ingroup window glfwapi glf wwindowiconifyfun glfw set window iconify callback glf wwindow window glf wwindowiconifyfun cbfun sets framebuffer resize callback window function sets framebuffer resize callback window called framebuffer window resized param window window callback set param cbfun callback null remove set callback return set callback null callback set library initialized intro init errors errors include glfw initialized thread safety function called main thread window fbsize version ingroup window glfwapi glf wframebuffersizefun glfw set framebuffer size callback glf wwindow window glf wframebuffersizefun cbfun processes pending events function processes events event queue returns processing events window input callbacks events called platforms window resize menu operation event processing block event processing designed platforms window refresh callback window refresh redraw contents window operations platforms events application event queue causing callbacks called event processing functions event processing required joystick input work errors errors include glfw initialized glfw platform error reentrancy function called callback thread safety function called main thread events glfw wait events glfw wait events timeout version ingroup window glfwapi void glfw poll events void waits events queued processes function puts calling thread sleep event event queue events behaves glfw poll events events queue processed function returns processing events window input callbacks events called events callbacks function return callback called monitoring callbacks platforms window resize menu operation event processing block event processing designed platforms window refresh callback window refresh redraw contents window operations platforms callbacks called event processing functions windows exist function returns synchronization threads applications create windows threading library choice event processing required joystick input work errors errors include glfw initialized glfw platform error reentrancy function called callback thread safety function called main thread events glfw poll events glfw wait events timeout version ingroup window glfwapi void glfw wait events void waits timeout events queued processes function puts calling thread sleep event event queue timeout reached events behaves glfw poll events events queue processed function returns processing events window input callbacks events called timeout positive finite number events callbacks function return callback called monitoring callbacks platforms window resize menu operation event processing block event processing designed platforms window refresh callback window refresh redraw contents window operations platforms callbacks called event processing functions windows exist function returns synchronization threads applications create windows threading library choice event processing required joystick input work param timeout maximum time seconds wait reentrancy function called callback thread safety function called main thread events glfw poll events glfw wait events version ingroup window glfwapi void glfw wait events timeout double timeout posts event event queue function posts event current thread event queue causing glfw wait events return windows exist function returns synchronization threads applications create windows threading library choice errors errors include glfw initialized glfw platform error thread safety function called thread events glfw wait events version ingroup window glfwapi void glfw post event void returns input option window function returns input option window mode glfw cursor glfw sticky glfw sticky mouse buttons param window window query param mode glfw cursor glfw sticky glfw sticky mouse buttons errors errors include glfw initialized glfw invalid enum thread safety function called main thread glfw set input mode version ingroup input glfwapi int glfw input mode glf wwindow window int mode sets input option window function sets input mode option window mode glfw cursor glfw sticky glfw sticky mouse buttons mode glfw cursor cursor modes glfw cursor normal cursor visible behaving glfw cursor hidden cursor invisible client area window restrict cursor leaving glfw cursor disabled hides grabs cursor providing virtual unlimited cursor movement implementing camera controls mode glfw sticky glfw true enable sticky glfw false disable sticky enabled key press ensure glfw key returns glfw press time called key released interested pressed order mode glfw sticky mouse buttons glfw true enable sticky mouse buttons glfw false disable sticky mouse buttons enabled mouse button press ensure glfw mouse button returns glfw press time called mouse button released interested mouse buttons pressed order param window window input mode set param mode glfw cursor glfw sticky glfw sticky mouse buttons param input mode errors errors include glfw initialized glfw invalid enum glfw platform error thread safety function called main thread glfw input mode version replaces glfw enable glfw disable ingroup input glfwapi void glfw set input mode glf wwindow window int mode int returns localized printable key function returns localized printable key intended displaying key bindings user key glfw key unknown scancode scancode printable key key glfw key unknown scancode maps printable key function returns null behavior pass arguments passed key callback input key modification printable glfw key apostrophe glfw key comma glfw key glfw key period glfw key slash glfw key semicolon glfw key equal glfw key left bracket glfw key bracket glfw key backslash glfw key glfw key glfw key glfw key glfw key glfw key glfw key glfw key glfw key decimal glfw key divide glfw key multiply glfw key subtract glfw key add glfw key equal param key key query glfw key unknown param scancode scancode key query return localized key null errors errors include glfw initialized glfw platform error pointer lifetime returned string allocated freed glfw free valid glfw key library terminated thread safety function called main thread input key version ingroup input glfwapi const char glfw key int key int scancode returns reported keyboard key window function returns reported key window returned glfw press glfw release higher level action glfw repeat reported key callback glfw sticky input mode enabled function returns glfw press time key pressed key released key functions deal physical key tokens named standard keyboard layout input text unicode character callback modifier key bit masks mods key tokens function function implement text input input char param window desired window param key desired keyboard key glfw key unknown valid key function return glfw press glfw release errors errors include glfw initialized glfw invalid enum thread safety function called main thread input key version glfw window handle parameter ingroup input glfwapi int glfw key glf wwindow window int key returns reported mouse button window function returns reported mouse button window returned glfw press glfw release glfw sticky mouse buttons input mode enabled function glfw press time mouse button pressed mouse button released param window desired window param button desired mouse button buttons return glfw press glfw release errors errors include glfw initialized glfw invalid enum thread safety function called main thread input mouse button version glfw window handle parameter ingroup input glfwapi int glfw mouse button glf wwindow window int button retrieves position cursor relative client area window function returns position cursor screen coordinates relative upper left corner client area window cursor disabled glfw cursor disabled cursor position unbounded limited minimum maximum values double coordinate converted integer equivalents floor function casting integer type works positive coordinates fails negative position arguments null error occurs null position arguments set param window desired window param xpos store cursor coordinate relative left edge client area null param ypos store cursor coordinate relative edge client area null errors errors include glfw initialized glfw platform error thread safety function called main thread cursor pos glfw set cursor pos version replaces glfw mouse pos ingroup input glfwapi void glfw cursor pos glf wwindow window double xpos double ypos sets position cursor relative client area window function sets position screen coordinates cursor relative upper left corner client area window window input focus window input focus function called fails silently function implement camera controls glfw glfw cursor disabled cursor mode hides cursor transparently centers unconstrained cursor motion glfw set input mode cursor mode glfw cursor disabled cursor position unconstrained limited minimum maximum values double param window desired window param xpos desired coordinate relative left edge client area param ypos desired coordinate relative edge client area errors errors include glfw initialized glfw platform error remark asynchronous nature moment window focus event arrive set cursor position window creation thread safety function called main thread cursor pos glfw cursor pos version replaces glfw set mouse pos ingroup input glfwapi void glfw set cursor pos glf wwindow window double xpos double ypos creates custom cursor creates custom cursor image set window glfw set cursor cursor destroyed glfw destroy cursor remaining cursors destroyed glfw terminate pixels bit endian premultiplied rgba bits channel arranged canonically packed sequential rows starting left corner cursor hotspot pixels relative upper left corner cursor image coordinate systems glfw axis points axis points param image desired cursor image param xhot desired coordinate pixels cursor hotspot param yhot desired coordinate pixels cursor hotspot return handle created cursor null error error handling occurred errors errors include glfw initialized glfw platform error pointer lifetime image data copied function returns reentrancy function called callback thread safety function called main thread cursor object glfw destroy cursor glfw create standard cursor version ingroup input glfwapi glf wcursor glfw create cursor const glf wimage image int xhot int yhot creates cursor standard shape returns cursor standard shape shapes set window glfw set cursor param shape standard shapes shapes return cursor ready null error error handling occurred errors errors include glfw initialized glfw invalid enum glfw platform error reentrancy function called callback thread safety function called main thread cursor object glfw create cursor version ingroup input glfwapi glf wcursor glfw create standard cursor int shape destroys cursor function destroys cursor created glfw create cursor remaining cursors destroyed glfw terminate param cursor cursor object destroy errors errors include glfw initialized glfw platform error reentrancy function called callback thread safety function called main thread cursor object glfw create cursor version ingroup input glfwapi void glfw destroy cursor glf wcursor cursor sets cursor window function sets cursor image cursor client area window set cursor visible cursor mode cursor mode window glfw cursor normal platforms set cursor visible window input focus param window window set cursor param cursor cursor set null switch default arrow cursor errors errors include glfw initialized glfw platform error thread safety function called main thread cursor object version ingroup input glfwapi void glfw set cursor glf wwindow window glf wcursor cursor sets key callback function sets key callback window called key pressed repeated released key functions deal physical layout independent key tokens named values standard keyboard layout input text character callback glfw set char callback window loses input focus generate synthetic key release events pressed events user generated events fact synthetic generated focus loss event processed window focus callback glfw set window focus callback called scancode key specific platform machine scancodes intended users bind glfw key token key set glfw key unknown saved queried glfw key glfw generate synthetic key events case scancode param window window callback set param cbfun key callback null remove set callback return set callback null callback set library initialized intro init errors errors include glfw initialized thread safety function called main thread input key version glfw window handle parameter return ingroup input glfwapi glf wkeyfun glfw set key callback glf wwindow window glf wkeyfun cbfun sets unicode character callback function sets character callback window called unicode character input character callback intended unicode text input deals characters keyboard layout dependent key callback glfw set key callback characters map physical key produce characters specific physical key pressed released key callback character callback behaves text input called modifier held prevent normal text input platform super command key alt key windows character modifiers callback glfw set char mods callback receives events param window window callback set param cbfun callback null remove set callback return set callback null callback set library initialized intro init errors errors include glfw initialized thread safety function called main thread input char version glfw window handle parameter return ingroup input glfwapi glf wcharfun glfw set char callback glf wwindow window glf wcharfun cbfun sets unicode character modifiers callback function sets character modifiers callback window called unicode character input modifier character modifiers callback intended implementing custom unicode character input regular unicode text input character callback glfw set char callback character callback character modifiers callback deals characters keyboard layout dependent characters map physical key produce characters specific physical key pressed released key callback glfw set key callback param window window callback set param cbfun callback null remove set callback return set callback null callback set error occurred errors errors include glfw initialized thread safety function called main thread input char version ingroup input glfwapi glf wcharmodsfun glfw set char mods callback glf wwindow window glf wcharmodsfun cbfun sets mouse button callback function sets mouse button callback window called mouse button pressed released window loses input focus generate synthetic mouse button release events pressed mouse buttons events user generated events fact synthetic generated focus loss event processed window focus callback glfw set window focus callback called param window window callback set param cbfun callback null remove set callback return set callback null callback set library initialized intro init errors errors include glfw initialized thread safety function called main thread input mouse button version glfw window handle parameter return ingroup input glfwapi glf wmousebuttonfun glfw set mouse button callback glf wwindow window glf wmousebuttonfun cbfun sets cursor position callback function sets cursor position callback window called cursor moved callback position screen coordinates relative upper left corner client area window param window window callback set param cbfun callback null remove set callback return set callback null callback set library initialized intro init errors errors include glfw initialized thread safety function called main thread cursor pos version replaces glfw set mouse pos callback ingroup input glfwapi glf wcursorposfun glfw set cursor pos callback glf wwindow window glf wcursorposfun cbfun sets cursor enter exit callback function sets cursor boundary crossing callback window called cursor enters leaves client area window param window window callback set param cbfun callback null remove set callback return set callback null callback set library initialized intro init errors errors include glfw initialized thread safety function called main thread cursor enter version ingroup input glfwapi glf wcursorenterfun glfw set cursor enter callback glf wwindow window glf wcursorenterfun cbfun sets scroll callback function sets scroll callback window called scrolling device mouse wheel scrolling area touchpad scroll callback receives scrolling input mouse wheel touchpad scrolling area param window window callback set param cbfun scroll callback null remove set callback return set callback null callback set library initialized intro init errors errors include glfw initialized thread safety function called main thread scrolling version replaces glfw set mouse wheel callback ingroup input glfwapi glf wscrollfun glfw set scroll callback glf wwindow window glf wscrollfun cbfun sets file drop callback function sets file drop callback window called dragged files dropped window path array strings generated event guaranteed valid callback returned callback returns deep copy param window window callback set param cbfun file drop callback null remove set callback return set callback null callback set library initialized intro init errors errors include glfw initialized thread safety function called main thread path drop version ingroup input glfwapi glf wdropfun glfw set drop callback glf wwindow window glf wdropfun cbfun returns joystick function returns joystick param joy joystick joysticks query return glfw true joystick glfw false errors errors include glfw initialized glfw invalid enum glfw platform error thread safety function called main thread joystick version replaces glfw joystick param ingroup input glfwapi int glfw joystick int joy returns values axes joystick function returns values axes joystick element array querying joystick slot device error function return null glfw joystick check device presence param joy joystick joysticks query param count store number axis values returned array set error occurred return array axis values null joystick errors errors include glfw initialized glfw invalid enum glfw platform error pointer lifetime returned array allocated freed glfw free valid joystick disconnected function called joystick library terminated thread safety function called main thread joystick axis version replaces glfw joystick pos ingroup input glfwapi const float glfw joystick axes int joy int count returns buttons joystick function returns buttons joystick element array glfw press glfw release querying joystick slot device error function return null glfw joystick check device presence param joy joystick joysticks query param count store number button returned array set error occurred return array button null joystick errors errors include glfw initialized glfw invalid enum glfw platform error pointer lifetime returned array allocated freed glfw free valid joystick disconnected function called joystick library terminated thread safety function called main thread joystick button version glfw changed return dynamic array ingroup input glfwapi const unsigned char glfw joystick buttons int joy int count returns joystick function returns encoded utf joystick returned string allocated freed glfw free querying joystick slot device error function return null glfw joystick check device presence param joy joystick joysticks query return utf encoded joystick null joystick errors errors include glfw initialized glfw invalid enum glfw platform error pointer lifetime returned string allocated freed glfw free valid joystick disconnected function called joystick library terminated thread safety function called main thread joystick version ingroup input glfwapi const char glfw joystick int joy sets joystick configuration callback function sets joystick configuration callback removes set callback called joystick connected disconnected param cbfun callback null remove set callback return set callback null callback set library initialized intro init errors errors include glfw initialized thread safety function called main thread joystick event version ingroup input glfwapi glf wjoystickfun glfw set joystick callback glf wjoystickfun cbfun sets clipboard string function sets clipboard utf encoded string param window window clipboard contents param string utf encoded string errors errors include glfw initialized glfw platform error pointer lifetime string copied function returns thread safety function called main thread clipboard glfw clipboard string version ingroup input glfwapi void glfw set clipboard string glf wwindow window const char string returns contents clipboard string function returns contents clipboard convertible utf encoded string clipboard contents converted null returned glfw format unavailable error generated param window window request clipboard contents return contents clipboard utf encoded string null error error handling occurred errors errors include glfw initialized glfw platform error pointer lifetime returned string allocated freed glfw free valid glfw clipboard string glfw set clipboard string library terminated thread safety function called main thread clipboard glfw set clipboard string version ingroup input glfwapi const char glfw clipboard string glf wwindow window returns glfw timer function returns glfw timer timer set glfw set time timer measures time elapsed glfw initialized resolution timer dependent order micro nanoseconds highest resolution monotonic time source supported platform return current seconds error error handling occurred errors errors include glfw initialized thread safety function called thread reading internal timer offset atomic time version ingroup input glfwapi double glfw time void sets glfw timer function sets glfw timer continues count positive finite number equal years param time seconds errors errors include glfw initialized glfw invalid remark upper limit timer calculated floor implementations storing nanoseconds bits limit increased future thread safety function called thread writing internal timer offset atomic time version ingroup input glfwapi void glfw set time double time returns current raw timer function returns current raw timer measured nbsp nbsp frequency seconds frequency glfw timer frequency return timer error error handling occurred errors errors include glfw initialized thread safety function called thread time glfw timer frequency version ingroup input glfwapi uint glfw timer void returns frequency raw timer function returns frequency raw timer return frequency timer error error handling occurred errors errors include glfw initialized thread safety function called thread time glfw timer version ingroup input glfwapi uint glfw timer frequency void context window current calling thread function open open context window current calling thread context current single thread time thread single current context time default making context current implicitly forces pipeline flush machines support khr context flush control control context performs flush setting glfw context release behavior window hints ctx window hint window open open context window context generate glfw window context error param window window context current null detach current context errors errors include glfw initialized glfw window context glfw platform error thread safety function called thread context current glfw current context version ingroup context glfwapi void glfw context current glf wwindow window returns window context current calling thread function returns window open open context current calling thread return window context current null window context current errors errors include glfw initialized thread safety function called thread context current glfw context current version ingroup context glfwapi glf wwindow glfw current context void swaps buffers window function swaps buffers window rendering open open swap interval greater gpu driver waits number screen updates swapping buffers window open open context window context generate glfw window context error function apply vulkan rendering vulkan queue khr param window window buffers swap errors errors include glfw initialized glfw window context glfw platform error remark egl context window current calling thread thread safety function called thread buffer swap glfw swap interval version glfw window handle parameter ingroup window glfwapi void glfw swap buffers glf wwindow window sets swap interval current context function sets swap interval current open open context number screen updates wait time glfw swap buffers called swapping buffers returning called vertical synchronization vertical retrace synchronization vsync contexts support wgl ext swap control tear glx ext swap control tear extensions accept negative swap intervals driver swap frame arrives bit late check presence extensions glfw extension supported swap tearing extension specifications context current calling thread calling function current context glfw current context error function apply vulkan rendering vulkan mode swapchain param interval minimum number screen updates wait buffers swapped glfw swap buffers errors errors include glfw initialized glfw current context glfw platform error remark function called context creation leaving swap interval set default platform swap interval extensions glfw swap interval reset set remark gpu drivers honor requested swap interval user setting overrides application request bugs driver thread safety function called thread buffer swap glfw swap buffers version ingroup context glfwapi void glfw swap interval int interval returns extension function returns api extension context glext supported current open open context searches client api extension context creation api extensions context current calling thread calling function current context glfw current context error functions retrieves searches extension strings recommended cache frequently extension strings change lifetime context danger function apply vulkan vulkan glfw required instance extensions enumerate instance extension properties enumerate device extension properties param extension ascii encoded extension return glfw true extension glfw false errors errors include glfw initialized glfw current context glfw invalid glfw platform error thread safety function called thread context glext glfw proc address version ingroup context glfwapi int glfw extension supported const char extension returns address function current context function returns address open open core extension function context glext supported current context context current calling thread calling function current context glfw current context error function apply vulkan rendering vulkan glfw instance proc address instance proc addr device proc addr param procname ascii encoded function return address function null error error handling occurred errors errors include glfw initialized glfw current context glfw platform error remark address function guaranteed contexts remark function return null address version extension check context version extension string pointer lifetime returned function pointer valid context destroyed library terminated thread safety function called thread context glext glfw extension supported version ingroup context glfwapi glf wglproc glfw proc address const char procname returns vulkan loader function returns vulkan loader check performed glfw init availability vulkan loader guarantee window surface creation device creation glfw required instance extensions check extensions vulkan surface creation glfw physical device presentation support check queue family physical device supports image presentation return glfw true vulkan glfw false errors errors include glfw initialized thread safety function called thread vulkan support version ingroup vulkan glfwapi int glfw vulkan supported void returns vulkan instance extensions required glfw function returns array names vulkan instance extensions required glfw creating vulkan surfaces glfw windows successful list khr surface require additional extensions pass list instance create info struct vulkan machine function returns null generates glfw api unavailable error glfw vulkan supported check vulkan vulkan set extensions allowing window surface creation function returns null vulkan screen rendering compute work param count store number extensions returned array set error occurred return array ascii encoded extension names null error error handling occurred errors errors include glfw initialized glfw api unavailable remarks additional extensions required future versions glfw check extensions enable returned array error extension instance create info struct pointer lifetime returned array allocated freed glfw free guaranteed valid library terminated thread safety function called thread vulkan ext glfw create window surface version ingroup vulkan glfwapi const char glfw required instance extensions uint count defined version returns address vulkan instance function function returns address vulkan core extension function instance instance set null return function exported vulkan loader including functions enumerate instance extension properties enumerate instance layer properties create instance instance proc addr vulkan machine function returns null generates glfw api unavailable error glfw vulkan supported check vulkan function equivalent calling instance proc addr platform specific query vulkan loader fallback param instance vulkan instance query null retrieve functions instance creation param procname ascii encoded function return address function null error error handling occurred errors errors include glfw initialized glfw api unavailable pointer lifetime returned function pointer valid library terminated thread safety function called thread vulkan proc version ingroup vulkan glfwapi glf wvkproc glfw instance proc address instance instance const char procname returns queue family images function returns queue family physical device supports presentation platform glfw built vulkan required window surface creation instance extensions machine instance created required extensions function returns glfw false generates glfw api unavailable error glfw vulkan supported check vulkan glfw required instance extensions check instance extensions required param instance instance physical device belongs param device physical device queue family belongs param queuefamily queue family query return glfw true queue family supports presentation glfw false errors errors include glfw initialized glfw api unavailable glfw platform error thread safety function called thread synchronization details vulkan objects vulkan specification vulkan version ingroup vulkan glfwapi int glfw physical device presentation support instance instance physical device device uint queuefamily creates vulkan surface window function creates vulkan surface window vulkan loader initialization function returns error initialization failed generates glfw api unavailable error glfw vulkan supported check vulkan loader required window surface creation instance extensions instance created extensions enabled function returns error extension generates glfw api unavailable error glfw required instance extensions check instance extensions required window surface destroyed vulkan instance responsibility caller destroy window surface glfw destroy destroy surface khr destroy surface param instance vulkan instance create surface param window window create surface param allocator allocator null default allocator param surface store handle surface set null handle error occurred return success successful vulkan error code error error handling occurred errors errors include glfw initialized glfw api unavailable glfw platform error remarks error occurs creation glfw returns vulkan error code error glfw vulkan supported glfw required instance extensions eliminate occurrences errors thread safety function called thread synchronization details vulkan objects vulkan specification vulkan surface glfw required instance extensions version ingroup vulkan glfwapi result glfw create window surface instance instance glf wwindow window const allocation callbacks allocator surface khr surface endif version global definition cleanup compiler specific ifdef glfw wingdiapi defined undef wingdiapi undef glfw wingdiapi defined endif ifdef glfw callback defined undef callback undef glfw callback defined endif compiler specific ifdef cplusplus endif endif glfw