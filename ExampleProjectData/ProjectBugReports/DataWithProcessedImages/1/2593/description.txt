**Version/Branch of Dear ImGui:**

Version: 1.71 WIP
Branch: [docking/8dc04a4](https://github.com/ocornut/imgui/tree/8dc04a4c9fc70e833df91095327a022cd5d5635e)

**Back-end/Renderer/Compiler/OS**

Back-ends: imgui_impl_opengl3.cpp + imgui_impl_glfw.cpp
Compiler: MSVC 16.1.1
Operating System: Windows 8.1

**My Issue/Question:**

Update my git submodule to the latest version and now all the text looks messed up. (See screenshot). Also trying to move the window or any dear ImGUI window, crashes my nvidia driver. Worked fine yesterday with commit [c7c1bf1](https://github.com/ocornut/imgui/tree/c7c1bf177b5bb4a3495a6b82e91c45eed46986f7)

**Screenshots/Video**
![screen](https://user-images.githubusercontent.com/19614997/58635430-28cf1c80-82ee-11e9-9fb4-7cb572f0df06.jpg)

**Standalone, minimal, complete and verifiable example:** _(see https://github.com/ocornut/imgui/issues/2261)_
```cpp
// Setup Dear ImGui 
IMGUI_CHECKVERSION();

ImGui::CreateContext();
ImGuiIO& io = ImGui::GetIO();
io.ConfigFlags |= ImGuiConfigFlags_NavEnableKeyboard; // Enable Keyboard Controls
io.ConfigFlags |= ImGuiConfigFlags_NavEnableGamepad;  // Enable Gamepad Controls
io.ConfigFlags |= ImGuiConfigFlags_DockingEnable;     // Enable Docking
io.ConfigFlags |=
ImGuiConfigFlags_ViewportsEnable; // Enable Multi-Viewport / Platform Windows

// Setup Dear ImGui style
ImGui::StyleColorsDark();

// When viewports are enabled we tweak WindowRounding/WindowBg so platform windows can look identical to regular ones.
ImGuiStyle& style = ImGui::GetStyle();
if ((io.ConfigFlags & ImGuiConfigFlags_ViewportsEnable) != 0)
{
    style.WindowRounding              = 0.0F;
    style.Colors[ImGuiCol_WindowBg].w = 1.0F;
}

Application& app    = Application::Get();
auto*        window = static_cast<GLFWwindow*>(app.GetWindow().GetNativeWindow());

// Setup Platform/Renderer bindings
ImGui_ImplGlfw_InitForOpenGL(window, true);
ImGui_ImplOpenGL3_Init("#version 410");

while (true) /* while application is running */
{
    ImGui_ImplOpenGL3_NewFrame();
    ImGui_ImplGlfw_NewFrame();
    ImGui::NewFrame();

    static bool show = true;
    ImGui::ShowDemoWindow(&show);

    ImGuiIO&     io  = ImGui::GetIO();
    Application& app = Application::Get();
    io.DisplaySize   = ImVec2(static_cast<float>(app.GetWindow().GetWidth()), static_cast<float>(app.GetWindow().GetHeight()));

    // Rendering
    ImGui::Render();
    ImGui_ImplOpenGL3_RenderDrawData(ImGui::GetDrawData());

    if ((io.ConfigFlags & ImGuiConfigFlags_ViewportsEnable) != 0)
    {
        GLFWwindow* backup_current_context = glfwGetCurrentContext();
        ImGui::UpdatePlatformWindows();
        ImGui::RenderPlatformWindowsDefault();
        glfwMakeContextCurrent(backup_current_context);
    }
}

// Cleanup
ImGui_ImplOpenGL3_Shutdown();
ImGui_ImplGlfw_Shutdown();
ImGui::DestroyContext();
```

